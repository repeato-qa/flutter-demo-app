{"version":3,"sources":["../../icons/CommandLineIcon.js","../../icons/LandingIcon.js","../../icons/StartIcon.js","../../styles/colors.js","../../components/widgets/TagWidget.js","../../utils/compose.js","../../lib/StringUtils.js","components/NameValue.tsx","components/Sidebar.tsx","components/TestInfo.tsx","../../config.js","components/TagWidget.tsx","components/ImageMatchView.tsx","components/common/VerticalLine.tsx","components/StepItem.tsx","components/StepsInfo.tsx","components/TestIcon.tsx","pages/BatchReport/BatchReport.tsx","App.tsx","index.tsx"],"names":["StartIcon","props","SvgIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","LandingIcon","d","darkBg","darkBg2","logoColor","secondary","bg2","defaultBg","superLight","errorWarm","errorGradient","successGradient","success","enhance","fns","reduce","a","b","args","compose","withStyles","theme","tag","marginRight","inject","observer","classes","name","dbStore","fallbackColor","getTagByName","style","backgroundColor","color","onClick","cursor","chip","Chip","size","label","className","description","Tooltip","title","ScanTextOperators","contains","id","js","equals","notContains","greaterThan","lessThan","formatUserfacingTestId","testId","substr","toUpperCase","min2Digits","number","msToTime","duration","seconds","Math","floor","minutes","hours","toDateTime","date","dateObj","Date","isNaN","getDate","toLocaleDateString","toLocaleTimeString","getScanTextLabel","step","scanTextLabel","operator","separatorStyle","borderBottom","marginBottom","paddingBottom","NameValue","val","value","Boolean","Typography","variant","fontSize","ariaLabel","Metrics","appStartupDuration","skippedFramesCount","typoStyle","lineHeight","listItemStyle","paddingRight","paddingLeft","CssTextField","root","fontWeight","borderBottomColor","TextField","CssSelect","Select","renderTestResultRows","test","index","metric","maxValue","testRuns","map","tr","testRun","TestResultRow","formatedValue","percentage","delta","days","formatDuration","display","flexDirection","component","flexGrow","alignItems","background","wasSuccessful","Sidebar","activeTab","onTestSelect","React","searchKey","filter","currentMetric","values","setValues","batchRun","tests","setTests","maxMetricValue","fieldName","Number","MIN_VALUE","forEach","t","max","getMaxValue","defaultTest","search","toLowerCase","filteredTests","includes","deviceData","lastTestRun","length","steps","stepResults","onChange","e","target","successPercentage","stats","successCount","totalCount","flexBasis","padding","overflow","src","alt","maxWidth","position","cx","cy","r","strokeDasharray","strokeDashoffset","justifyContent","top","sx","failCount","createdOn","stepsCount","placeholder","inputProps","MenuItem","Object","keys","List","disablePadding","paddingTop","ListItem","button","divider","ListItemIcon","minWidth","ListItemText","primary","formatId","ArrowForwardIos","opacity","flex","TestInfo","failStepRef","console","log","packageData","appVersions","successSteps","result","failedSteps","isFailedTest","isDeviceSame","serial","scrollToFailStep","useCallback","current","scrollIntoView","behavior","block","useEffect","scrollContainer","document","getElementById","setTimeout","scrollTo","left","stepsFailedStyle","textDecoration","marginTop","Grid","container","spacing","item","xs","packageName","minSdk","firstInstallTime","code","targetSdk","lastUpdateTime","os","osVersion","borderRadius","stepsCountWithSubTestSteps","whiteSpace","message","BatchRunExportDataDirName","TagWidget","tagsMapping","find","marginLeft","RectView","match","renderStyle","x","y","outline","boxShadow","ImageMatchView","matchIndex","matches","selection","roi","children","rest","rect","VerticalLine","showTip","borderRight","borderTop","borderLeft","stepType","stepImageIcon","maxHeight","lBox","org","bottom","formatPercentage","valueNum","parseFloat","toFixed","pStep","stepName","Fragment","stepImage","getArrows","localeDateFormat","toLocaleString","StepsItem","refList","stepResult","referenceSResult","useState","isDiffBatchHovered","setDiffBatchHovered","isDiffViewHovered","setDiffViewHovered","baseSrc","trBaseSrc","type","tagWidget","start","end","sDrop","iconDrop","pDrop","longClick","textLabel","stopOnFingerprintFound","isHorizontalDrag","horizontalDragDirection","ArrowForward","ArrowBack","firstDragPoint","infoStringX","lastDragPoint","verticalDragDirection","ArrowDownward","ArrowUpward","infoStringY","actions","clearText","push","text","join","noDesc","stepText","click","icon","TouchApp","cmdLineIcon","drag","dragAndDropGuess","dragDirection","waitForTemplate","HourglassEmpty","waitForDuration","subtype","waitForKeyboard","TextFields","scanText","home","Home","back","KeyboardBackspace","appSwitch","FilterNone","templateAssertion","Search","someContentAssertion","someContentClick","startApp","iosBundleId","stopApp","execScript","CommandLineIcon","language","script","subTest","scanTextAssertion","assertionJs","searchText","scanTextClick","scanTextWait","optional","tags","key","getStepInfo","isSuccess","ref","createRef","isCopy","copy","border","similarityWarnThreshold","isLandscape","currentRotation","rotationVars","landscape","seascape","orgFrameSrc","originalFrame","screenshot","screenshotSrc","stepHoverDetail","isOriginal","stepColor","lStyleType","boxStyle","textAlign","renderResult","placeHolder","region","minHeight","MaxSize","CardHeader","avatar","Avatar","subheader","action","image","screenSimilarity","onMouseEnter","event","onMouseLeave","mixBlendMode","fontFamily","stepBox","mt","StepsInfo","refTestRun","i","currSResult","currStep","missingStepRuns","sResult","refSr","Box","TestIcon","bg","stepsWithImage","avatarSrc","lastStep","commonThemeProps","typography","h1","h2","h3","h4","h5","h6","caption","body1","body2","subtitle1","darkTheme","createTheme","palette","main","brightTheme","BatchReport","useRef","setActiveTab","setTest","alert","error","verifyReportData","ThemeProvider","IconButton","right","zIndex","Close","App","ReactDOM","render","StrictMode"],"mappings":"iXAwBeA,MArBf,SAAmBC,GACjB,OACE,kBAACC,EAAA,EAAYD,EACX,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,SAEf,8BAAUC,OAAO,mBACjB,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,UCe1BC,MA9Bf,SAAqBhB,GACnB,OACE,kBAACC,EAAA,EAAYD,EACX,yBAAKE,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,kBACrE,0BAAMY,EAAE,4EACR,0BAAMA,EAAE,+EACR,0BACEA,EAAE,mUAIJ,0BACEA,EAAE,uJAGJ,0BACEA,EAAE,oKAGJ,0BAAMA,EAAE,kFACR,0BAAMA,EAAE,iFACR,0BACEA,EAAE,gOCLGlB,MAjBf,SAAmBC,GACjB,OACE,kBAACC,EAAA,EAAYD,EACX,yBAAKE,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,kBACrE,0BAAMY,EAAE,+DACR,0BAAMA,EAAE,6DACR,0BAAMA,EAAE,uUACR,0BAAMA,EAAE,uMACR,0BAAMA,EAAE,6KACR,0BAAMA,EAAE,iEACR,0BAAMA,EAAE,kEACR,0BAAMA,EAAE,kL,sICdT,MACMC,EAAS,UAETC,EAAU,UACVC,EAAY,UACZC,EAAYD,EACZE,EAAM,UACNC,EAAY,UAKZC,EAAa,UAGbC,EAAY,UAEZC,EAAgB,4EAChBC,EAAkB,4EAIlBC,EAAU,UCuBRC,MCxCf,YAAoBC,GAClB,OAAOA,EAAIC,QAAO,CAACC,EAAGC,IAAM,IAAIC,IAASF,EAAEC,KAAKC,MDKlCC,CAEdC,aANaC,IAAS,CACtBC,IAAK,CAAElC,OAAQ,GAAImC,YAAa,OAMhCC,YAAO,WACPC,IA8BaZ,EAlBf,SAAmB7B,GAEjB,MAAM,QAAE0C,EAAF,KAAWC,EAAX,QAAiBC,EAAjB,cAA0BC,EAAgBvB,GAAQtB,EAClDsC,EAAMM,EAAQE,aAAaH,GAC3BI,EAAQ,CAAEC,iBAAoB,OAAHV,QAAG,IAAHA,OAAA,EAAAA,EAAKW,QAASJ,KAAkB7C,EAAM+C,OAEnE/C,EAAMkD,UACRH,EAAMI,OAAS,WAEjB,MAAMC,EAAO,kBAACC,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAOZ,EAAMa,UAAWd,EAAQJ,IAAKS,MAAOA,EAAOG,QAASlD,EAAMkD,UAClG,cAAIZ,QAAJ,IAAIA,KAAKmB,YACA,kBAACC,EAAA,EAAD,CAASC,MAAOrB,EAAImB,aAAcL,GAElCA,KEpBX,MAAMQ,EAAoB,CACxBC,SAAU,CAAEC,GAAI,WAAYP,MAAO,UAAWQ,GAAI,4CAClDC,OAAQ,CAAEF,GAAI,SAAUP,MAAO,QAASQ,GAAI,gCAC5CE,YAAa,CAAEH,GAAI,cAAeP,MAAO,cAAeQ,GAAI,4CAC5DG,YAAa,CAAEJ,GAAI,cAAeP,MAAO,kBAAmBQ,GAAI,sDAChEI,SAAU,CAAEL,GAAI,WAAYP,MAAO,eAAgBQ,GAAI,uDAOzD,SAASK,GAAuBC,GAC9B,OAAOA,EAAOC,OAAO,EAAG,GAAGC,cAwD7B,MAAMC,GAAaC,GACbA,EAAS,GACJ,IAAMA,EAERA,EAQHC,GAAWC,IACf,IAAKA,EAAU,MAAO,GACtB,IAAIC,EAAUC,KAAKC,MAAOH,EAAW,IAAQ,IACzCI,EAAUF,KAAKC,MAAOH,EAAW,IAAe,IAChDK,EAAQH,KAAKC,MAAOH,EAAW,KAAoB,IAWvD,OATIK,EAAQ,KACVA,EAAQ,IAAMA,GAEZD,EAAU,KACZA,EAAU,IAAMA,GAEdH,EAAU,KACZA,EAAU,IAAMA,GAEXI,EAAQ,IAAMD,EAAU,IAAMH,GAQjCK,GAAaC,IACjB,IAAKA,EAAM,MAAO,GAElB,MAAMC,EAAU,IAAIC,KAAKF,GAEzB,OAAIG,MAAMF,EAAQG,WAAmB,GAE9BH,EAAQI,qBAAuB,IAAMJ,EAAQK,sBAwHtD,SAASC,GAAiBC,GAAM,MAC9B,OAAIA,EAAKC,cAAsBD,EAAKC,cAEpC,UAAO/B,EAAkB8B,EAAKE,iBAA9B,aAAO,EAAkCrC,M,YCnPrCsC,GAAiB,CACrBC,aAHgB,oBAIhBC,aAAc,EACdC,cAAe,GAGJC,GAAY,SAACjG,GACxB,IAEIkG,EAFIvD,EAAgB3C,EAAhB2C,KAAMwD,EAAUnG,EAAVmG,MAQd,OAFED,EAHGE,QAAQD,IAAU,GAAKA,IAAU,IAG9BA,EAFA,gBAKN,uBAAKpD,MAAO8C,GAAZ,UACE,eAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B3D,IAC1B,eAAC0D,EAAA,EAAD,CAAYC,QAAQ,KAAKvD,MAAO,CAAEwD,SAAU,UAA5C,SACGL,QCpBHM,GAAY,CAAE,aAAc,eAC5BC,GAAe,CACnB9B,SAAU,oBACV+B,mBAAoB,uBACpBC,mBAAoB,wBAOhBC,GAAY,CAChBL,SAAU,SACVM,WAAY,OAMRC,GAAgB,CACpBC,aAAc,EACdC,YAAa,GAGTC,GAAe7E,YAAW,CAC9B8E,KAAM,CACJ,UAAW,CACTjE,MAAO1B,EACP4F,WAAY,OAEd,sBAAuB,CACrBlE,MAAO1B,GAGT,qCAAsC,CACpCuE,aAAc,qBAEhB,+BAAgC,CAC9BsB,kBAAmB5F,GAErB,8BAA+B,CAC7B4F,kBAAmB7F,KAjBJa,CAoBlBiF,KAEGC,GAAYlF,YAAW,CAC3B8E,KAAM,CACJ,UAAW,CACTjE,MAAO1B,EACP4F,WAAY,OAEd,sBAAuB,CACrBlE,MAAO1B,GAGT,qCAAsC,CACpCuE,aAAc,qBAEhB,+BAAgC,CAC9BsB,kBAAmB5F,GAErB,8BAA+B,CAC7B4F,kBAAmB7F,KAjBPa,CAoBfmF,KAEGC,GAAuB,SAACC,EAAYC,EAAeC,EAAgBC,GAEvE,IAAMC,EAAsBJ,EAAKI,SACjC,OACE,qCACGA,EAASC,KAAI,SAACC,EAAaL,GAAd,OACZ,eAAC,GAAD,CAA2BM,QAASD,EAAIJ,OAAQA,EAAQC,SAAUA,GAA9CG,EAAGjE,UAWzBmE,GAAgB,SAACjI,GACrB,IAEIkI,EAAeC,EAFXH,EAA8BhI,EAA9BgI,QAASL,EAAqB3H,EAArB2H,OAAQC,EAAa5H,EAAb4H,SACnBzB,EAAQ6B,EAAQL,GAEtB,GAAIxB,EAAO,CAET,OADA+B,EAAgB,GAAK/B,EACbwB,GACN,IAAK,WACHO,EAAgB/B,EAAQ,IFxChC,SAAwBxB,GACtB,IAAIyD,EAAQzD,EAGR0D,EAAOxD,KAAKC,MAAMsD,EAAQ,OAC9BA,GAAgB,MAAPC,EAGT,IAAIrD,EAAQH,KAAKC,MAAMsD,EAAQ,MAAQ,GACvCA,GAAiB,KAARpD,EAGT,IAAID,EAAUF,KAAKC,MAAMsD,EAAQ,IAAM,GAInCxD,GAHJwD,GAAmB,GAAVrD,GAGa,GAOtB,MAAQ,GAJNsD,EADEA,EACM,GAAEA,MAEH,KAEQ7D,GAAWQ,MAAUR,GAAWO,MAAYP,GAAWK,KAAKC,MAAMF,MEiB9C0D,CAAenC,EAAQ,KAAQA,EAAQ,MACtE,MACF,IAAK,qBACH+B,EAAgB/B,EAAQ,MAG5BgC,EAAc,IAAQhC,EAASyB,OAE/BM,EAAgB,MAChBC,EAAa,EAGf,OACE,gBAAC9B,EAAA,EAAD,CAAYtD,MAAO,CAAEwF,QAAS,OAAQC,cAAe,OAASlC,QAAQ,QAAQmC,UAAU,MAAxF,UACE,sBAAK1F,MAAO,CAAE5C,MA1FE,KA0FhB,SAAuC8E,GAAW+C,EAAQ9C,QAC1D,sBAAKnC,MAAO,CAAER,YAAa,IAA3B,SAAkC2F,IAElC,sBAAKnF,MAAO,CAAEwF,QAAS,OAAQG,SAAU,EAAGC,WAAY,UAAxD,SACE,sBAAK5F,MAAO,CAAE3C,OAAQ,EAAGD,MAAM,GAAD,OAAKgI,EAAL,KAAoBS,WAAYZ,EAAQa,cAAgBlH,EAAkBD,WAmBnGoH,GAAU,SAAC9I,GAAyB,IAAD,gBACtC+I,EAA4B/I,EAA5B+I,UAAWC,EAAiBhJ,EAAjBgJ,aACnB,EAA4BC,WAAe,CAAEC,UAAW,GAAIC,OAAQ,MAAOC,cAAe,aAA1F,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BL,WAAeM,SAASC,OAAlD,mBAAOA,EAAP,KAAcC,EAAd,KAEIC,EAnBc,SAACC,GACnB,IAAI/B,EAAWgC,OAAOC,UAUtB,OARAN,SAASC,MAAMM,SAAQ,SAACC,GAAD,OACrBA,EAAElC,SAASiC,SAAQ,SAAC/B,GACdA,EAAG4B,KACL/B,EAAW/C,KAAKmF,IAAIpC,EAAUG,EAAG4B,WAKhC/B,EAQcqC,CAAYZ,EAAOD,eAElCc,EAAcjB,eAAkB,SAACO,MAAsB,IAGvDW,EAASlB,eAAkB,WAC/B,IAAQE,EAAWE,EAAXF,OAEFD,EAAYG,EAAOH,UAAUkB,cAEnC,GAAKlB,GAAwB,QAAXC,EAAlB,CAKA,IAAIkB,EAAqBd,SAASC,MAE9BN,IACFmB,EAAgBA,EAAclB,QAC5B,SAAC1B,GAAD,mBACM,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM3D,UAAN,eAAUsG,cAAcE,SAASpB,MAAjC,OACAzB,QADA,IACAA,GADA,UACAA,EAAM9D,aADN,aACA,EAAayG,cAAcE,SAASpB,MADpC,UAEAzB,EAAK8C,kBAFL,iBAEA,EAAiB5H,YAFjB,aAEA,EAAuByH,cAAcE,SAASpB,QAGhDC,GAAqB,QAAXA,IACZkB,EAAgBA,EAAclB,QAAO,SAAC1B,GACpC,IAAM+C,EAAW,OAAG/C,QAAH,IAAGA,OAAH,EAAGA,EAAMI,UAAa,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMI,SAAS4C,QAAS,GACrDC,EAAK,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAaG,YAAYxB,QAAO,SAACzD,GAAD,OAAsBA,EAAK9D,WAAwB,eAAXuH,MAEtF,MAAe,WAAXA,EAA4BuB,EAAMD,OAAS,EACxCC,EAAMD,UAAN,OAAiBD,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAaG,YAAYF,YAGrDhB,EAASY,GACTH,EAAYG,QAxBVZ,EAASF,SAASC,SAyBnB,CAACH,EAAQa,IAGNU,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBnI,EAAR,EAAQA,KAAMwD,EAAd,EAAcA,MACdmD,EAAU,2BAAKD,GAAN,kBAAe1G,EAAOwD,MAGjC8C,aAAgB,WACdkB,MACC,CAACd,EAAQc,IAGZlB,aAAgB,WACdiB,EAAYX,SAASC,SACpB,CAACU,IAEJ,IACMa,EAAqB,eAAQxB,SAASyB,aAAjB,aAAQ,EAAgBC,eAAzB,UAAyC1B,SAASyB,aAAlD,aAAyC,EAAgBE,YAEnF,OACE,uBACEpH,GAAG,UACHf,MAAO,CACLE,MAAO,QACPkI,UAAyB,OAAdpC,EAAqB,OAAS,MACzC3I,OAAQ,QALZ,UAQE,uBACE0D,GAAG,WACHf,MAAO,CACL5C,MAAO,IACPyI,WAAY1H,EACZkK,QAAS,GACTD,UAAW,OACXzC,SAAU,EACV2C,SAAU,QARd,UAWE,sBAAKC,IAAI,kBAAkBC,IAAI,OAAOxI,MAAO,CAAEyI,SAAU,IAAKzF,aAAc,OAC5E,iCACE,eAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKmC,UAAU,MAAnC,+BAGA,eAACpC,EAAA,EAAD,CAAYC,QAAQ,KAAKmC,UAAU,MAAM1F,MAAO,CAAEgD,aAAc,IAAhE,SACGwD,SAAS5F,QAGZ,uBAAKZ,MAAO,CAAE0I,SAAU,WAAY1F,aAhC5B,IAgCR,UACE,uBAAK5F,MAAM,OAAOC,OAAO,OAAOC,QAAO,oBAAuBmD,UAAU,QAAxE,UACE,yBAAQA,UAAU,aAAakI,GAAG,KAAKC,GAAG,KAAKC,EAAE,oBAAoBtL,KAAK,cAAcC,OAAQkB,EAAWjB,YAAY,MAEvH,yBACEgD,UAAU,gBACVkI,GAAG,KACHC,GAAG,KACHC,EAAE,oBACFtL,KAAK,cACLC,OAAQqB,EACRpB,YAAY,OACZqL,gBAAiBd,EAAoB,KAAO,IAAMA,GAClDe,iBAAkB,QAGtB,sBACE/I,MAAO,CAAE0I,SAAU,WAAYlD,QAAS,OAAQwD,eAAgB,SAAUpD,WAAY,SAAUxI,MAAO,OAAQC,OAAQ,OAAQ4L,IAAK,GADtI,SAGE,gBAAC3F,EAAA,EAAD,CAAY4F,GAAIrF,GAAW6B,UAAU,MAAM1F,MAAO,CAAE5C,MAAO,eAA3D,UACE,uBAAK4C,MAAO,CAAE+C,aAhOZ,oBAgOqCC,aAAc,GAArD,8BACMwD,SAASyB,aADf,aACM,EAAgBkB,UADtB,WAEE,wBAFF,oBAGM3C,SAASyB,aAHf,aAGM,EAAgBC,aAHtB,eAIE,2BALJ,oBAOM1B,SAASC,aAPf,aAOM,EAAgBiB,OAPtB,kBAYJ,eAAC,GAAD,CAAW9H,KAAK,kBAAkBwD,MAAOlB,GAAU,UAACsE,gBAAD,aAAC,EAAU4C,aAC9D,eAAC,GAAD,CAAWxJ,KAAK,YAAYwD,MAAK,UAAEoD,SAASyB,aAAX,aAAE,EAAgBrG,WACnD,eAAC,GAAD,CAAWhC,KAAK,kBAAkBwD,MAAK,UAAEoD,SAASyB,aAAX,aAAE,EAAgBoB,mBAG7D,uBACEtI,GAAG,YACHN,UAAyB,OAAduF,EAAqB,qBAAuB,GACvDhG,MAAO,CACL6F,WAAYzH,EACZuH,SAAU,EACVH,QAAS,OACTC,cAAe,UAPnB,UAUE,uBAAKzF,MAAO,CAAEwF,QAAS,OAAQxC,aAAc,GAAIqF,QAAS,GAAIpF,cAAe,GAAI2C,WAAY,UAA7F,UACE,uBAAK5F,MAAO,CAAEoI,UAAyB,OAAdpC,EAAqB,MAAQ,OAAQR,QAAS,QAAvE,UACE,eAACtB,GAAD,CACEX,QAAQ,WACRvD,MAAO,CAAEoI,UAAW,MAAOzC,SAAU,EAAGnG,YAAa,IACrD8J,YAAY,qBACZ1J,KAAK,YACLiI,SAAUA,EACV0B,WAAY9F,KAGd,gBAACc,GAAD,CAAWhB,QAAQ,WAAW3D,KAAK,SAASiI,SAAUA,EAAUzE,MAAOkD,EAAOF,OAAQpG,MAAO,CAAE2F,SAAU,EAAGyC,UAAW,OAAvH,UACE,eAACoB,EAAA,EAAD,CAAUpG,MAAM,MAAhB,iBACA,eAACoG,EAAA,EAAD,CAAUpG,MAAM,aAAhB,wBACA,eAACoG,EAAA,EAAD,CAAUpG,MAAM,SAAhB,0BAGW,OAAd4C,GACC,uCACE,eAAC1C,EAAA,EAAD,CACEoC,UAAU,MACVnC,QAAQ,QACRvD,MAAO,CACLgE,aAAc,GACdC,YAAa,IALjB,iCAUA,eAACM,GAAD,CAAWhB,QAAQ,WAAW3D,KAAK,gBAAgBiI,SAAUA,EAAUzE,MAAOkD,EAAOD,cAArF,SACGoD,OAAOC,KAAKhG,IAASqB,KAAI,SAACH,EAAQD,GAAT,OACxB,eAAC6E,EAAA,EAAD,CAAuBpG,MAAOwB,EAA9B,SACGlB,GAAQkB,IADIA,cASzB,eAAC+E,EAAA,EAAD,CAAMC,gBAAgB,EAAM5J,MAAO,CAAEsI,SAAU,OAAQjL,OAAQ,OAAQgL,QAAS,GAAIwB,WAAY,GAAhG,SACGpD,EAAM1B,KAAI,SAACL,EAAWC,GAAZ,OACT,gBAACmF,EAAA,EAAD,CACEC,QAAM,EACNC,SAAO,EAEPhK,MAAO+D,GACP5D,QAAS,WACP8F,EAAatB,EAAOD,IANxB,UASE,eAACuF,EAAA,EAAD,CAAcf,GAAI,CAAEhJ,MAAO,QAASgK,SAAU,IAA9C,SACE,eAAC,GAAD,CAAUxF,KAAMA,MAGlB,eAACyF,EAAA,EAAD,CAAcC,QAAO,UAAK1F,EAAK9D,OAAStC,UAAS,cAAS+L,GAAS3F,EAAK3D,KAAOf,MAAO,CAAE2F,SAAU,EAAGvI,MAAO,KAE5G,eAACkN,EAAA,EAAD,CAAiBtK,MAAO,CAAEuK,QAASvE,IAAcrB,EAAQ,EAAI,KAC9C,OAAdqB,GACC,sBAAKhG,MAAO,CAAEwK,KAAM,EAAG/E,cAAe,MAAOE,SAAU,GAAvD,SACE,+BAAMlB,GAAqBC,EAAMC,EAAO2B,EAAOD,cAAeM,SAf7DjC,EAAK3D,GAAK4D,e,UCrThB8F,GAAW,SAACxN,GAAkB,IAAD,UAChCyH,EAAsBzH,EAAtByH,KAAMgG,EAAgBzN,EAAhByN,YAGRzF,EAAO,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAMI,UAAa,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMI,SAAS4C,QAAS,GACvDiD,QAAQC,IAAI,gBAAiBlG,EAAKI,UAClC,IAAM+F,EAAW,OAAG5F,QAAH,IAAGA,OAAH,EAAGA,EAAS6F,YAAY,GACnClD,EAAW,OAAG3C,QAAH,IAAGA,OAAH,EAAGA,EAAS2C,YAEvBmD,EAAenD,EAAYxB,QAAO,SAAA4E,GAAM,OAAIA,EAAOnM,WACnDoM,EAAcrD,EAAYxB,QAAO,SAAA4E,GAAM,OAAKA,EAAOnM,WACnDqM,EAAeD,EAAYvD,OAAS,EACpCyD,EAAezG,EAAK8C,WAAW4D,SAAWnG,EAAQuC,WAAW4D,OAE7DC,EAAmBnF,IAAMoF,aAAY,WACzCZ,EAAYa,QAAQC,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAC/D,CAAChB,IAEJxE,IAAMyF,WAAU,WACd,IAAMC,EAAkBC,SAASC,eAAe,mBAC5CZ,EACFa,YAAW,kBAAMV,MAAoB,KAGxB,OAAfO,QAAe,IAAfA,KAAiBI,SAAS,CAAE/C,IAAK,EAAGgD,KAAM,EAAGR,SAAU,WACtD,CAAC/G,EAAK3D,GAAImK,EAAcR,EAAaW,IAExC,IAAMa,EAAmB,CAAE1I,SAAU,OAAQ2I,eAAgB,OAAQ/L,OAAQ,QAM7E,OALI6K,EAAYvD,OAAS,IACvBwE,EAAiBC,eAAiB,YAClCD,EAAiB9L,OAAS,WAGvB6E,EAKH,iCACE,gBAAC3B,EAAA,EAAD,CAAYC,QAAQ,KAAKmC,UAAU,MAAM1F,MAAO,CAAEgD,aAAc,GAAIoJ,UAAW,GAA/E,UACG1H,EAAK9D,MADR,SACqByJ,GAAS3F,EAAK3D,IADnC,OAGA,gBAACsL,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,gBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,eAAC,GAAD,CAAW7M,KAAK,gBAAgBwD,MAAOlB,GAAU,OAACwC,QAAD,IAACA,OAAD,EAACA,EAAM0E,aACxD,eAAC,GAAD,CAAWxJ,KAAK,gBAAgBwD,MAAK,OAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAa6B,cACpD,eAAC,GAAD,CAAW9M,KAAK,qBAAqBwD,MAAOzB,GAAQ,OAACsD,QAAD,IAACA,OAAD,EAACA,EAASrD,YAC9D,eAAC,GAAD,CAAWhC,KAAK,eAAewD,MAAK,OAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAa8B,SACnD,eAAC,GAAD,CAAW/M,KAAK,gBAAgBwD,MAAOlB,GAAU,OAAC2I,QAAD,IAACA,OAAD,EAACA,EAAa+B,uBAEjE,gBAACP,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,eAAC,GAAD,CAAW7M,KAAK,iBAAiBwD,MAAOlB,GAAU,OAAC+C,QAAD,IAACA,OAAD,EAACA,EAAS9C,QAC5D,eAAC,GAAD,CAAWvC,KAAK,mBAAmBwD,MAAK,OAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAajL,OACvD,eAAC,GAAD,CAAWA,KAAK,YAAYwD,MAAK,OAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAagC,OAChD,eAAC,GAAD,CAAWjN,KAAK,kBAAkBwD,MAAK,OAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAaiC,YACtD,eAAC,GAAD,CAAWlN,KAAK,oBAAoBwD,MAAOlB,GAAU,OAAC2I,QAAD,IAACA,OAAD,EAACA,EAAakC,wBAGvE,gBAACV,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGvM,MAAO,CAAEgD,aAAc,IAAnD,UACE,eAACqJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAItB,EAAe,GAAK,EAAnC,SACE,eAAC,GAAD,CACEvL,KAAI,iBAAYuL,EAAe,GAAK,aAAhC,KACJ/H,OAAW,OAAJsB,QAAI,IAAJA,GAAA,UAAAA,EAAM8C,kBAAN,eAAkB5H,MAAO,OAAzB,OAAiC8E,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM8C,WAAWwF,IAAK,MAAW,OAAJtI,QAAI,IAAJA,GAAA,UAAAA,EAAM8C,kBAAN,eAAkByF,YAAa,SAGtG9B,GACA,eAACkB,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,eAAC,GAAD,CACE7M,KAAK,qBACLwD,OAAc,OAAP6B,QAAO,IAAPA,GAAA,UAAAA,EAASuC,kBAAT,eAAqB5H,MAAO,OAA5B,OAAoCqF,QAApC,IAAoCA,OAApC,EAAoCA,EAASuC,WAAWwF,IAAK,MAAc,OAAP/H,QAAO,IAAPA,GAAA,UAAAA,EAASuC,kBAAT,eAAqByF,YAAa,WAMrH,uBACEjN,MAAO,CACLkN,aAAc,EACd7E,QAAS,GACTxC,WAAYZ,EAAQa,cAAgBlH,EAAkBD,GAJ1D,UAOE,gBAAC2E,EAAA,EAAD,CAAY4F,GAAI,CAAE1F,SAAU,QAAUD,QAAQ,KAA9C,oBACMmB,EAAKyI,2BADX,mBACgDpC,EAAarD,OAD7D,kBAEE,eAACpE,EAAA,EAAD,CAAYoC,UAAU,OAAOwD,GAAIgD,EAAkB3I,QAAQ,KAAKpD,QAAS,kBAAO8K,EAAYvD,OAAS,EAAI2D,IAAqB,MAA9H,mBACMJ,EAAYvD,OADlB,iBAKDwD,GACC,gBAAC5H,EAAA,EAAD,CAAY4F,GAAI,CAAE1F,SAAU,OAAQ4J,WAAY,gBAAkB7J,QAAQ,KAA1E,iDACsB0H,EAAY,UADlC,aACsB,EAAgBoC,kBAzDrC,M,wCClCJ,MASMC,GAA4B,OCE1BC,OAff,SAAmBtQ,GACjB,IAAQ2C,EAAS3C,EAAT2C,KACFL,EAAMiO,YAAYC,MAAK,SAAAzG,GAAC,OAAIA,EAAEpH,OAASA,KACvCI,EAAQ,CAAEC,iBAAoB,OAAHV,QAAG,IAAHA,OAAA,EAAAA,EAAKW,QAAS3B,EAAKmP,WAAY,EAAGrQ,OAAQ,IACrEgD,EAAO,eAACC,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAOZ,EAAMI,MAAOA,IAEpD,OACE,qCACE,gCACE,eAACW,EAAA,EAAD,CAASC,OAAU,OAAHrB,QAAG,IAAHA,OAAA,EAAAA,EAAKmB,cAAe,GAApC,SAAyCL,S,4FCd3CsN,GAAW,SAAC,GAAoC,IAAD,QAAjCC,EAAiC,EAAjCA,MAAOrD,EAA0B,EAA1BA,QAASvK,EAAiB,EAAjBA,MAC9B6N,EAAmB,CACrBnF,SAAU,WACVlF,SAAU,EACVyI,KAAK,GAAD,OAA0B,KAAhB,OAAL2B,QAAK,IAALA,GAAA,UAAAA,EAAOlF,gBAAP,eAAiBoF,GAAtB,KACJ7E,IAAI,GAAD,OAA0B,KAAhB,OAAL2E,QAAK,IAALA,GAAA,UAAAA,EAAOlF,gBAAP,eAAiBqF,GAAtB,KACH3Q,MAAM,GAAD,OAA0B,KAAhB,OAALwQ,QAAK,IAALA,GAAA,UAAAA,EAAOrN,YAAP,eAAanD,OAAlB,KACLC,OAAO,GAAD,OAA2B,KAAjB,OAALuQ,QAAK,IAALA,GAAA,UAAAA,EAAOrN,YAAP,eAAalD,QAAlB,KACNkN,QAASA,GAAoB,EAC7ByD,QAAQ,aAAD,OTae,WSZtBC,UAAW,+BAOb,OAJIjO,IACF6N,EAAW,2BAAQA,GAAgB7N,IAG9B,sBAAKA,MAAO6N,KAGRK,GAAiB,SAACjR,GAC7B,IACQkR,EAAiFlR,EAAjFkR,WAAYC,EAAqEnR,EAArEmR,QAASC,EAA4DpR,EAA5DoR,UAAWC,EAAiDrR,EAAjDqR,IAAK7F,EAA4CxL,EAA5CwL,SAAUzI,EAAkC/C,EAAlC+C,MAAOuI,EAA2BtL,EAA3BsL,IAAKgG,EAAsBtR,EAAtBsR,SAAaC,EAAhF,aAAyFvR,EAAzF,IAEA,OACE,iDACMuR,GADN,IAEExO,MAAK,aACH0I,SAAU,WACVJ,SAAU,SACVG,SAAUA,EACVyE,aAVe,GAWZlN,GAPP,UAUE,sBAAKuI,IAAKA,EAAKnL,MAAM,OAAOoL,IAAI,iBAAiBxI,MAAO,CAAEkN,aAdzC,EAcuD1H,QAAS,WAEhF4I,GAAWA,EAAQ1G,OAChB0G,EAAQrJ,KAAI,SAAC6I,EAAYjJ,GAAb,OAA4B,eAAC,GAAD,CAAsBiJ,MAAOA,EAAOrD,QAAS5F,IAAUwJ,EAAa,EAAI,KAAzDxJ,MACvD0J,GAAa,eAAC,GAAD,CAAUI,KAAMJ,IAEhCC,GACC,eAAC,GAAD,CACEG,KAAMH,EACNtO,MAAO,CACLE,MTxBgB,aS8BrBqO,OC5CMG,GAAe,SAACzR,GAC3B,IAAQI,EAA2BJ,EAA3BI,OAAR,EAAmCJ,EAAnB0R,eAAhB,SACA,OACE,sBACElO,UAAU,KACVT,MAAO,CACL4O,YAAY,aAAD,OAAenQ,GAC1BpB,OAAQA,GAAU,QAJtB,SAQGsR,GACC,sBACElO,UAAU,QACVT,MAAO,CACL0I,SAAU,WACVmG,UAAU,cAAD,OAAgBpQ,GACzBmQ,YAAa,wBACbE,WAAY,wBACZpB,WAAY,OACZzE,IAAK,aCRX8F,GAAW,CACfvL,SAAU,SACVtD,MAAO,sBAEH8O,GAAqC,CACzC5R,MAAO,OACP6R,UAAW,QAcPC,GAAY,WAAiB,IAAhBC,IAAe,yDAChC,MAAO,CACLzG,SAAU,WACVtL,MAAO,QACPgS,OAAQD,EAAM,QAAU,MAGtBE,GAAmB,SAACjM,GACxB,IAAMkM,EAAWC,WAAWnM,GAC5B,MAAM,GAAN,QAAsB,IAAXkM,GAAgBE,QAAQ,GAAnC,MAGIC,GAAQ,SAAC9M,EAAY+M,GAAb,OACZ,gBAAC,IAAMC,SAAP,WACE,gCAAOD,IACP,uBAAM1P,MAAO+O,GAAb,wBAAgC1E,GAAQ,OAAC1H,QAAD,IAACA,OAAD,EAACA,EAAM5B,WAI7C6O,GAAY,SAAClL,EAAY9E,EAAcI,GAA3B,OAChB,eAAC,IAAM2P,SAAP,UACE,sBAAK3P,MAAOA,EAAOuI,IAAK3I,EAAM4I,IAAK9D,EAAK3D,QAKtC8O,GAAY,SAAC5K,EAAkBN,GAEnC,GADiBM,EAAQ2C,YAAYjD,GAGrC,OAAO,eAAC,GAAD,CAActH,OAAO,UAGxByS,GAAmB,SAAC3N,GACxB,GAAKA,EACL,OAAO,IAAIE,KAAKF,GAAM4N,kBAGXC,GAAY,SAAC/S,GAAkB,IAAD,IACjCyH,EAAmFzH,EAAnFyH,KAAMO,EAA6EhI,EAA7EgI,QAASN,EAAoE1H,EAApE0H,MAAOhC,EAA6D1F,EAA7D0F,KAAMsN,EAAuDhT,EAAvDgT,QAASC,EAA8CjT,EAA9CiT,WAAYC,EAAkClT,EAAlCkT,iBAAkBzF,EAAgBzN,EAAhByN,YAC3E,EAAkDxE,IAAMkK,UAAS,GAAjE,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAAgDpK,IAAMkK,UAAS,GAA/D,mBAAOG,EAAP,KAA0BC,EAA1B,KACMC,EAAO,YAAQnD,GAAR,YAAqC5I,EAAK3D,IACjD2P,EAAS,6BAAezL,EAAQuC,kBAAvB,aAAe,EAAoB4D,QAE5CsE,ERgLY,EAAC/M,EAAMgO,EAAO,MAAOC,GAAY,KACnD,IAAIC,EAAQ,GACRC,EAAM,GACNC,EAAQ,GACRC,EAAW,KAEf,MAAMC,EAAQtO,EAAKuO,UAAY,YAAc,GAkB7C,IAAIC,EAEJ,GAlBkB,SAAdxO,EAAKgO,OACHhO,EAAKyO,uBACPL,EAAS,6BACApO,EAAK0O,kBACdL,EAAWrO,EAAK2O,wBAA0B,EAAIC,IAAeC,IAC7DX,EAAS,GAAElO,EAAK8O,eAAeC,cAC/BZ,EAAO,GAAEnO,EAAKgP,cAAcD,cAC5BX,EAAS,GAAEF,QAAYC,MAEvBE,EAAWrO,EAAKiP,sBAAwB,EAAIC,IAAgBC,IAC5DjB,EAAS,GAAElO,EAAK8O,eAAeM,cAC/BjB,EAAO,GAAEnO,EAAKgP,cAAcI,cAC5BhB,EAAS,GAAEF,QAAYC,MAMT,SAAdnO,EAAKgO,KAAiB,CACxB,MAAMqB,EAAU,GAChBrP,EAAKsP,WAAaD,EAAQE,KAAK,cAC/BvP,EAAKwP,MAAQH,EAAQE,KAAK,QAC1Bf,EAAYa,EAAQI,KAAK,SAG3B,MAuHMC,EAAS,wCACTC,EAxHW,CACfC,MAAO,CACLC,KAAMC,IACNrI,QAASzH,EAAKuO,UAAY,aAAe,QACzC5S,UAAW,iBACXoU,YAAa,gBAEfC,KAAM,CACJH,KAAMxB,EACN5G,QAAU,QAAOzH,EAAKiQ,iBAAmB,UAAe,OAAJjQ,QAAI,IAAJA,OAAA,EAAAA,EAAMkQ,gBAAiB,KAAK5B,IAChF3S,UAAWyS,EACX2B,YAAa,gBAEfI,gBAAiB,CACfN,KAAMO,IACN3I,QAAS,OACT9L,UAAW,0BACXoU,YAAa,UAEfM,gBAAiB,CACfR,KAAMO,IACN3I,QAAS,OACT9L,UAAY,OAAMqE,EAAKf,eAAgC,2BAAjBe,EAAKsQ,QAAuC,sBAAwB,KAC1GP,YAAa,UAEfQ,gBAAiB,CACfV,KAAMO,IACN3I,QAAS,OACT9L,UAAW,0BACXoU,YAAa,gBAEfP,KAAM,CACJK,KAAMW,IACN/I,QAAS+G,EACT7S,UAAWqE,EAAKwP,MAAS,IAAGxP,EAAKwP,QACjCO,YAAa,gBAEfU,SAAU,CACRhJ,QAAS,gBACT9L,UAAW,GACXoU,YAAa,gBAEfW,KAAM,CACJb,KAAMc,IACNlJ,QAAS,aACT9L,UAAW,GACXoU,YAAa,gBAEfa,KAAM,CACJf,KAAMgB,IACNpJ,QAAS,aACT9L,UAAW,GACXoU,YAAa,gBAEfe,UAAW,CACTjB,KAAMkB,IACNtJ,QAAS,kBACT9L,UAAW,GACXoU,YAAa,gBAEfiB,kBAAmB,CACjBnB,KAAMoB,IACNxJ,QAAS,yBACT9L,UAAW,GACXoU,YAAa,UAEfmB,qBAAsB,CACpBzJ,QAAS,6BACT9L,UAAW,GACXoU,YAAa,UAEfoB,iBAAkB,CAChB1J,QAAS,QACT9L,UAAW,yBACXoU,YAAa,gBAEfqB,SAAU,CACRvB,KAAMxV,EACNoN,QAAS,YACT9L,UAAW,CAACqE,EAAK+J,YAAa/J,EAAKqR,aAAa5B,KAAK,OACrDM,YAAa,gBAEfuB,QAAS,CACPzB,KAAMvU,EACNmM,QAAS,WACT9L,UAAWqE,EAAK+J,YAAc/J,EAAK+J,YAAc/J,EAAKqR,YACtDtB,YAAa,gBAEfwB,WAAY,CACV1B,KAAM2B,EACN/J,QAA2B,QAAlBzH,EAAKyR,SAAqB,2BAA6B,kBAChE9V,UAAWqE,EAAK0R,OAChB3B,YAAa,KAEf4B,QAAS,CACP9B,KAAM7I,IACNS,QAAS,UACT9L,UAAW,GACXoU,YAAa,KAEf6B,kBAAmB,CACjB/B,KAAMoB,IACNxJ,QAAS,iBACT9L,UAAWqE,EAAK6R,YAAe,UAAS7R,EAAK6R,cAAiB,uBAAsB9R,GAAiBC,OAAUA,EAAK8R,cACpH/B,YAAa,UAEfgC,cAAe,CACbtK,QAAS,gBACT9L,UAAY,IAAGqE,EAAK8R,cACpB/B,YAAa,gBAEfiC,aAAc,CACZnC,KAAMO,IACN3I,QAAS,OACT9L,UAAWqE,EAAK6R,YAAe,eAAc7R,EAAK6R,cAAiB,sBAAqB9R,GAAiBC,OAAUA,EAAK8R,cACxH/B,YAAa,WAKS/P,EAAKgO,OAAS,CACtCvG,QAASiI,EACT/T,UAAW+T,EACXG,KAAMC,IACNC,YAAa,gBAaf,OAXI/P,EAAKiS,WAAUtC,EAASlI,QAAW,YAAWkI,EAASlI,WACvDwG,GAAajO,EAAKkS,OACpBvC,EAAShU,UACP,8BACGgU,EAAShU,UAAW,IACpBqE,EAAKkS,KAAK9P,KAAIxF,GACb,kBAAC,EAAD,CAAWK,KAAML,EAAKuV,IAAKvV,QAKnB,QAAToR,EAAiB2B,EAAWA,EAAS3B,IQ1V3BoE,CAAYpS,EAAc,OAAO,GAC5CqS,EAAS,OAAG9E,QAAH,IAAGA,OAAH,EAAGA,EAAYrR,QAExBoW,EAAyC/O,IAAMgP,YAC/CC,EAAM,OAAGjF,QAAH,IAAGA,OAAH,EAAGA,EAAYkF,KACrBC,EAAM,oBAAiBL,EXlEP,UWkEmBtW,GACnC4W,EAA0BzO,QAAW,OAAJnC,QAAI,IAAJA,OAAA,EAAAA,EAAM4Q,0BAA2B,QAClE9N,EAAavC,EAAQuC,WACrB+N,EACJ/N,EAAWgO,kBAAoBhO,EAAWiO,aAAaC,WAAalO,EAAWgO,kBAAoBhO,EAAWiO,aAAaE,SAE7H1F,EAAQiC,KAAK+C,GAEb,IAAIW,IAAkB,OAAJjT,QAAI,IAAJA,OAAA,EAAAA,EAAMkT,gBAAN,UAA0BpF,EAA1B,mBAAqC9N,QAArC,IAAqCA,OAArC,EAAqCA,EAAMkT,eACzD1F,IACFyF,GAAW,UAAMnF,EAAN,YAAiBC,EAAY,IAAMP,EAAiB2F,aAGjE,IAAMC,IAA0B,OAAV7F,QAAU,IAAVA,OAAA,EAAAA,EAAY4F,aAAZ,UAA6BrF,EAA7B,YAAwCC,EAAxC,mBAAqDR,QAArD,IAAqDA,OAArD,EAAqDA,EAAY4F,YAGjFE,GAAkB,SAACrF,GAAsC,IAAxB4E,IAAuB,yDACtDU,EAAsB,QAATtF,EACbuF,EAAsB,OAAVhG,QAAU,IAAVA,KAAYrR,QAAUA,EAAUH,EAC5CuB,EAAkBgW,EAAapX,EAAUqX,EACzCC,IAAaF,KAAc,OAAC/F,QAAD,IAACA,MAAY4F,YAExC3D,KADa8D,GAAoB,OAACtT,QAAD,IAACA,KAAMkT,cACjCI,EAAc9F,EAAmB,qBAAuB,WAAc,YAC7EhO,EAAO8T,EAAU,OAAGtT,QAAH,IAAGA,OAAH,EAAGA,EAAMyG,UAAT,OAAqB8G,QAArB,IAAqBA,OAArB,EAAqBA,EAAY9G,UAClDgN,EAAWb,EAAcrG,GAAKiH,GAnF/B,CACLzN,SAAU,WACV0G,OAAQ,EACRiH,UAAW,SACXjZ,MAAO,OACP8P,aAAc,eAiFd,OACE,uBAAKzM,UAAU,OAAOT,MAAK,2BAAOoW,GAAP,IAAiBnW,kBAAiB4J,WAAY,GAAIxM,OAAQ,KAArF,UACE,gBAACiG,EAAA,EAAD,CAAYC,QAAQ,QAApB,UAA6B4O,EAA7B,iBACA,eAAC7O,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BuM,GAAiB3N,SAK9CmU,GAAe,SAAC/N,EAAyBoI,GAE7C,IAAKpI,EAAK,OAAOgO,GAAY5F,GAE7B,IAAIvC,EAAmB,QAATuC,EAAA,OAAiBhO,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMyL,QAAvB,OAAiC8B,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAY9B,QAK3D,OAJI+B,IACF/B,EAAU+B,EAAiB/B,SAI3B,uBAAK3N,UAAU,cAAcT,MAAO,CAAEoI,UAAW,MAAOM,SAAU,YAAlE,UACE,eAAC,GAAD,CAAgByF,WAAU,OAAExL,QAAF,IAAEA,OAAF,EAAEA,EAAMwL,WAAYC,QAASA,EAASC,UAAS,OAAE1L,QAAF,IAAEA,OAAF,EAAEA,EAAM0L,UAAWC,IAAG,OAAE3L,QAAF,IAAEA,OAAF,EAAEA,EAAM6T,OAAQpZ,MAAO,IAAKmL,IAAKA,IAE/HyN,GAAgBrF,GAAM,OAKvB4F,GAAc,SAAC5F,GACnB,OACE,uBACE3Q,MAAO,CACLwF,QAAS,OACTwD,eAAgB,SAChBpD,WAAY,SACZD,SAAU,EACV+C,SAAU,WACVzI,gBAAiBxB,EACjByO,aAAc,EACduJ,UAAW,KATf,UAYE,eAACnT,EAAA,EAAD,4BACC0S,GAAgBrF,GAAM,OAKvB+F,GAAU,IAEhB,OACE,uCACE,uBACEjW,UAAU,cACVwU,IAAME,GAAWH,EAA0B,KAAdtK,EAC7B1K,MAAO,CACLkK,SAAUwM,GACVjO,SAAUiO,GACVrB,OAAQF,EAAS,GAAKE,GAN1B,UASE,eAACsB,GAAA,EAAD,CACEC,OACE,eAACC,GAAA,EAAD,CAAQ7W,MAAO,CAAEC,gBAAiB+U,EAAYnW,EAAUH,GAAa,aAAW,UAAhF,SACGgR,EAAS8C,MAAQ,eAAC9C,EAAS8C,KAAV,MAGtB5R,MAAO6O,GAAM9M,EAAc+M,EAAStF,SACpC0M,UACE,uCACE,gCAAOpH,EAASpR,YADlB,OAEGqE,QAFH,IAEGA,GAFH,UAEGA,EAAMkS,YAFT,aAEG,EAAY9P,KAAI,SAACxF,EAAUoF,GAAX,OACf,eAAC,GAAD,CAAW/E,KAAML,GAAUoF,SAIjCoS,QAAY,OAAJpU,QAAI,IAAJA,OAAA,EAAAA,EAAMqU,QAAS,qCAAGpH,GAAUlL,EAAD,UAAU+L,EAAV,mBAAqB9N,QAArB,IAAqBA,OAArB,EAAqBA,EAAMqU,OAAShI,MACvEhP,MAAO,KAGT,uBACEA,MAAO,CACL+C,aAAc,qBAFlB,UAKE,uBACE/C,MAAO,CACL0I,SAAU,WAEVzF,cAAe,IAJnB,UAOE,uBAAKjD,MAAO,CAAEwF,QAAS,OAAQC,cAAe8P,EAAc,SAAW,OAAvE,UACGe,GAAaV,GAAa,OAC3B,sBAAK5V,MAAO,CAAE3C,OAAQ,GAAID,MAAO,MAChCkZ,GAAaP,GAAe,eAGpB,OAAV7F,QAAU,IAAVA,OAAA,EAAAA,EAAY+G,mBACX,uCACE,sBAAKjX,MAAO,CAAE0I,SAAU,WAAY0G,OAAQ,EAAGhS,MAAO,OAAQC,OAAQ,IAAKiL,SAAU,UAArF,SACE,uBACE7H,UAAS,0BAAqBoG,OAAM,OAACqJ,QAAD,IAACA,OAAD,EAACA,EAAY+G,kBAAoB3B,EAA0B,QAAU,SACzG4B,aAAc,SAAAC,GAAK,OAAI7G,GAAoB,IAC3C8G,aAAc,SAAAD,GAAK,OAAI7G,GAAoB,IAH7C,UAKE,eAAChN,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B8L,GAAgB,OAACa,QAAD,IAACA,OAAD,EAACA,EAAY+G,oBAC1D,eAAC3T,EAAA,EAAD,CAAYC,QAAQ,QAApB,qCAGF8M,GAAsBE,IAAsBqF,IAAeG,IAC3D,uBACEmB,aAAc,SAAAC,GAAK,OAAI3G,GAAmB,IAC1C4G,aAAc,SAAAD,GAAK,OAAI3G,GAAmB,IAC1C/P,UAAU,UACVT,MAAO,CACL5C,MAAOsZ,GACPrZ,OAAQqZ,GACRhO,SAAU,WACVM,eAAgB,SAChBpD,WAAY,SACZJ,QAAS,OACTvF,gBAAiB,OACjBgO,UAAW,yBACXf,aAAc,EACdjE,IAAK,GAdT,UAiBE,sBACEV,IAAKqN,GACL5V,MAAO,CAAE0I,SAAU,WAAYuG,UAAWyH,GAASjO,SAAUiO,GAASzI,UAAW,4BAEnF,sBAAK1F,IAAKwN,GAAe/V,MAAO,CAAE0I,SAAU,WAAYuG,UAAWyH,GAASjO,SAAUiO,GAASW,aAAc,0BAM5G,OAAVnH,QAAU,IAAVA,OAAA,EAAAA,EAAY7C,UACX,sBACErN,MAAO,CACLkN,aAAc,EACd7E,QAAS,GACTxC,WAAYmP,EAAYpW,EAAkBD,EAC1CqE,aAAc,IALlB,SAQE,eAACM,EAAA,EAAD,CAAYC,QAAQ,QAAQ2F,GAAI,CAAEhJ,MAAO8U,EXjP5B,UATA,UW0PmE5H,WAAY,WAAYkK,WAAY,aAApH,gBACGpH,QADH,IACGA,OADH,EACGA,EAAY7C,kBAStBwC,GAAU5K,EAASN,EAAQ,OCxQ5B4S,GAAe,CACnB/R,QAAS,OACTC,cAAe,SACf+R,GAAI,OACJxO,eAAgB,SAChBpD,WAAY,SACZ8C,SAAU,YAYC+O,GAAY,SAACxa,GACxB,IAAQyH,EAAsBzH,EAAtByH,KAAMgG,EAAgBzN,EAAhByN,YACRzF,EAAO,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAMI,UAAa,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMI,SAAS4C,QAAS,GACjDgQ,EAAU,OAAGhT,QAAH,IAAGA,OAAH,EAAGA,EAAMI,SAAS2I,MAChC,SAACzI,EAAI2S,GAAL,eAAW3S,EAAGc,eAAiBd,EAAG4C,YAAYF,QAAUhD,EAAKI,SAAS4C,SAAWiQ,EAAI,IAAK,UAAA3S,EAAGwC,kBAAH,eAAe4D,WAAf,UAA0B1G,EAAK8C,kBAA/B,aAA0B,EAAiB4D,WAGvI,IAAKnG,EACH,OAAO,KAGT,IAAM2C,EAAW,oBAAO3C,QAAP,IAAOA,OAAP,EAAOA,EAAS2C,aAE3BqI,EAA+C,GAEjD2H,EAAiC,KACjCzH,EAAsC,KACtC0H,EAAwB,KAsB5B,OAnBC,WAAQ,IAAD,EACAxO,EAAU,OAAG3E,QAAH,IAAGA,GAAH,UAAGA,EAAMiD,aAAT,aAAG,EAAaD,OAE1BoQ,EAAkBzO,GADL,OAAGzB,QAAH,IAAGA,OAAH,EAAGA,EAAaF,QAInC,GAAIoQ,EAAkB,EAGpB,IAFA,IAESH,EAFatO,EAAayO,EAEPH,EAAItO,EAAYsO,IAE1C/P,EAAY+P,GAAK,GACjB/P,EAAY+P,GAAGhV,KAAf,OAAsB+B,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMiD,MAAMgQ,GAClC/P,EAAY+P,GAAG9Y,SAAU,EACzB+I,EAAY+P,GAAGvC,MAAO,EAd3B,GAoBC,qCACGxN,EAAYF,QACXE,EAAY7C,KAAI,SAACgT,EAASpT,GAAmB,IAAD,EACpC4F,EAAiB,OAAPwN,QAAO,IAAPA,KAAS3C,KAAO,MAAQ,IAKxC,OAJAwC,EAAcG,EACd5H,GAA6B,OAAVuH,QAAU,IAAVA,GAAA,UAAAA,EAAY9P,mBAAZ,eAAyB6F,MAAK,SAAAuK,GAAK,aAAIA,EAAMrV,KAAK5B,MAAX,UAAkB6W,SAAlB,aAAkB,EAAajV,KAAK5B,SAAO,KAG/E,aAFtB8W,EAAWE,EAAQpV,MAENgO,KAA2B,KAGtC,eAACsH,GAAA,EAAD,CAAKxX,UAAU,WAAWyI,GAAE,2BAAOqO,IAAP,IAAgBhN,YAA5C,SACE,eAAC,GAAD,CACEG,YAAaA,EACbhG,KAAMA,EACNuL,QAASA,EACTtN,KAAMkV,EACN3H,WAAY0H,EACZzH,iBAAkBA,EAClBlL,QAASA,EACTN,MAAOA,KATiDA,S,+BCpE3DuT,GAAW,SAACjb,GACvB,IAAQyH,EAASzH,EAATyH,KAEF+L,EAAO,YAAQnD,GAAR,YAAqC5I,EAAK3D,IAEjDkE,EAAO,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAMI,UAAa,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMI,SAAS4C,QAAS,GACjDyQ,EAAKlT,EAAWA,EAAQa,cAAgBjH,EAAUH,EAAaH,EAC/D6Z,EAAiB1T,EAAKiD,MAAMvB,QAAO,SAAAzD,GAAI,OAAIU,QAAQV,EAAKqU,UACxDxE,EAAO,eAAC,KAAD,IAET6F,EAAY,GAEhB,GAAID,EAAe1Q,OAAS,EAAG,CAC7B,IAAM4Q,EAAWF,EAAeA,EAAe1Q,OAAS,GACxD2Q,EAAS,UAAM5H,EAAN,YAAiB6H,EAASzC,eAGrC,IAAMe,EACJ,eAAC,KAAD,CAAQrO,IAAK8P,EAAWrY,MAdN,CAAE5C,MAAO,GAAIC,OAAQ,IAcvC,SACGmV,IAIL,OACE,sBAAK/R,UAAU,kBAAf,SACE,sBAAKT,MAAO,CAAEkN,aAAc,MAAOmI,OAAO,aAAD,OAAe8C,IAAxD,SAAiEvB,O,oBC5BjE2B,GAAmB,CACvBC,WAAY,CACVC,GAAI,CACFjV,SAAU,SACVY,WAAY,KAEdsU,GAAI,CACFlV,SAAU,SACVY,WAAY,KAEduU,GAAI,CACFnV,SAAU,SACVY,WAAY,IACZlE,MAAO9B,EACP4E,aAAc,GAEhB4V,GAAI,CACFpV,SAAU,SACVY,WAAY,KAEdyU,GAAI,CACFrV,SAAU,SACVY,WAAY,KAEd0U,GAAI,CAEFtV,SAAU,SACVY,WAAY,KAEd2U,QAAS,CAEP7Y,MAAO,UACPsD,SAAU,UAEZwV,MAAO,CACL5U,WAAY,KAEd6U,MAAO,CACLzV,SAAU,SACVY,WAAY,KAEd8U,UAAW,CAET9U,WAAY,OAKZ+U,GAAYC,aAAY,2BACzBb,IADwB,IAE3Bc,QAAS,CACP1I,KAAM,OACNvG,QAAS,CACPkP,KAAMnb,GAERG,UAAW,CACTgb,KAAMhb,OAKNib,GAAcH,aAAY,2BAC3Bb,IAD0B,IAE7Bc,QAAS,CACP1I,KAAM,QACNwB,KAAM,CACJ/H,QdhEqB,UciErB9L,UdhEsB,WckExB8L,QAAS,CACPkP,KAAMnb,GAERG,UAAW,CACTgb,KAAMhb,OAIZib,GAAYf,WAAWC,GAAGvY,MAAQ/B,EAClCob,GAAYf,WAAWE,GAAGxY,MAAQ/B,EAE3B,IAAMqb,GAAc,SAACvc,GAG1B,IAAMyN,EAAcxE,IAAMuT,OAAO,MAEjC,EAAkCvT,IAAMkK,SAAwB,MAAhE,mBAAOpK,EAAP,KAAkB0T,EAAlB,KACA,EAAwBxT,IAAMkK,SAAsB,MAApD,mBAAO1L,EAAP,KAAaiV,EAAb,KAkBA,OAJAzT,IAAMyF,WAAU,YAXS,WACvB,IAAK,IAAD,IACF,GAAI,UAACnF,gBAAD,QAAC,EAAUzF,IAAM,UAACyF,gBAAD,QAAC,EAAUC,MAC9BmT,MAAM,gCAGR,MAAOC,GACPD,MAAM,iCAKRE,KACC,IAGD,uCACE,eAACC,EAAA,EAAD,CAAeza,MAAO6Z,GAAtB,SACE,eAAC,GAAD,CACEnT,UAAWA,EACXC,aAAc,SAACtB,EAAOD,GACpBgV,EAAa/U,GACbgV,EAAQjV,QAKd,eAACqV,EAAA,EAAD,CAAeza,MAAOia,GAAtB,SACG7U,GACC,uCACE,eAACsV,EAAA,EAAD,CACEjZ,GAAG,cACHf,MAAO,CAAE0I,SAAU,QAASuR,MAAO,GAAIhR,IAAK,GAAIhJ,gBdxH9B,4BcwHiEia,OAAQ,KAC3F/Z,QAAS,WACPuZ,EAAa,MACbC,EAAQ,OALZ,SAQE,eAACQ,GAAA,EAAD,MAEF,sBAAKpZ,GAAG,kBAAkBf,MAAO,CAAE2F,SAAU,EAAG2C,SAAU,SAAUD,QAAS,IAA7E,SACE,uCACE,eAAC,GAAD,CAAU3D,KAAMA,EAAMgG,YAAaA,IACnC,eAAC,GAAD,CAAWhG,KAAMA,EAAMgG,YAAaA,kBCpIrC0P,OAJf,WACE,OAAO,eAAC,GAAD,KCDTC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEF1O,SAASC,eAAe,W","file":"static/js/main.72e7e080.chunk.js","sourcesContent":["import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction StartIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <polyline points=\"4 17 10 11 4 5\" />\n        <line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default StartIcon\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction LandingIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"-10 00 500 500\">\n        <path d=\"M45.989,97.409l-21.813,20.555L5.447,98.089l21.814-20.555L45.989,97.409z\" />\n        <path d=\"M125.485,22.498l-21.811,20.553L84.946,23.176l21.811-20.553L125.485,22.498z\" />\n        <path\n          d=\"M226.65,375.628c12.448,13.211,27.011,24.125,43.031,32.564l130.95-123.396c-7.475-16.492-17.504-31.677-29.954-44.889\n\tL240.007,101.237L95.979,236.956L226.65,375.628z M177.163,252.123l73.166-68.944l48.935,51.931\n\tc18.796,19.946,17.86,51.464-2.086,70.26l-0.819,0.771c-19.946,18.796-51.464,17.858-70.26-2.087L177.163,252.123z\"\n        />\n        <path\n          d=\"M385.073,426.421l22.159-3.438l4.746-21.916c6.283-29.011,5.858-58.136-0.671-85.148L300.118,420.694\n\tC326.692,428.818,355.74,430.972,385.073,426.421z\"\n        />\n        <path\n          d=\"M275.803,284.328l0.819-0.772c7.92-7.463,8.289-19.973,0.828-27.891l-28.381-30.118l-29.538,27.833l28.381,30.118\n\tC255.374,291.417,267.885,291.788,275.803,284.328z\"\n        />\n        <path d=\"M162.857,351.635L53.609,235.697l-40.103,37.789l87.059,92.389L162.857,351.635z\" />\n        <path d=\"M281.367,21.079l-40.103,37.789l109.249,115.938l17.913-61.336L281.367,21.079z\" />\n        <path\n          d=\"M156.518,55.431L135.47,33.094l-21.811,20.553l18.434,19.562l-17.937,16.901L67.01,40.077L45.196,60.632l47.146,50.033\n\tl-17.936,16.901l-18.434-19.562L34.16,128.56l21.048,22.337l18.529,65.835l147.4-138.897L156.518,55.431z\"\n        />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default LandingIcon\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction StartIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"-60 00 500 500\">\n        <path d=\"m223.652344 484.691406h29.972656v27.308594h-29.972656zm0 0\" />\n        <path d=\"m114.421875 484.691406h29.96875v27.308594h-29.96875zm0 0\" />\n        <path d=\"m282.972656 158.308594c0-18.152344-3.113281-36.082032-8.984375-53.210938h-179.929687c-5.871094 17.128906-8.984375 35.058594-8.984375 53.210938v190.539062h197.898437zm-48.683594 123.824218h-100.53125v-71.355468c0-27.40625 22.296876-49.703125 49.703126-49.703125h1.125c27.40625 0 49.703124 22.296875 49.703124 49.703125zm0 0\" />\n        <path d=\"m202.507812 12.695312-18.484374-12.695312-18.484376 12.695312c-24.46875 16.804688-44.132812 38.292969-57.90625 62.429688h152.777344c-13.769531-24.136719-33.433594-45.625-57.902344-62.429688zm0 0\" />\n        <path d=\"m184.585938 191.046875h-1.125c-10.882813 0-19.730469 8.851563-19.730469 19.730469v41.382812h40.585937v-41.382812c0-10.878906-8.851562-19.730469-19.730468-19.730469zm0 0\" />\n        <path d=\"m312.945312 219.519531v159.300781h55.101563v-126.945312zm0 0\" />\n        <path d=\"m0 378.820312h55.101562v-159.300781l-55.101562 32.355469zm0 0\" />\n        <path d=\"m114.421875 439.441406v30.691406h29.96875v-26.878906h24.644531v68.746094h29.972656v-68.746094h24.644532v26.878906h29.972656v-30.691406l31.664062-60.621094h-202.53125zm0 0\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default StartIcon\n","export const logoBg = '#0a2836'\nexport const darkBg = '#1e4158'\nexport const defaultFont = '#3e3e3e'\nexport const darkBg2 = '#7692a4'\nexport const logoColor = '#10a4da'\nexport const secondary = logoColor\nexport const bg2 = '#f5f5f5'\nexport const defaultBg = '#FFFFFF'\nexport const invertedFont = '#FFFFFF'\nexport const transparentWhite = 'rgba(255, 255, 255, 0.36)'\nexport const lighterFont = '#60626b'\nexport const lightestFont = '#b4b4b4'\nexport const superLight = '#d7d7d7'\nexport const error = '#f44336'\nexport const errorMedium = '#c93e33'\nexport const errorWarm = '#ff7a59'\nexport const errorLight = 'rgb(230, 167, 162)'\nexport const errorGradient = 'linear-gradient(315deg, rgba(255,167,167,1) 0%, rgba(255,221,173,1) 100%)'\nexport const successGradient = 'linear-gradient(315deg, rgba(174,213,129,1) 0%, rgba(249,255,178,1) 100%)'\nexport const feedbackGradient = `linear-gradient(315deg, rgba(3,98,160,1) 0%, ${logoColor} 100%)`\nexport const warning = '#ffb222'\nexport const warningLight = '#f5e49c'\nexport const success = '#AED581'\nexport const successFont = '#577633'\nexport const successLight = '#CDEFA6'\nexport const matchColor = '#ff00ff'\nexport const turmeric = '#c8d051'\nexport const roiColor = successLight\nexport const tagColors = [\n  '#D4CD7F',\n  '#EBE5BE',\n  '#58A289',\n  '#AECFC5',\n  '#5497A0',\n  '#A9CED5',\n  '#8892B6',\n  '#C1C7D5',\n  '#DDD5C2',\n  '#E9E7DD',\n  '#AFA695',\n  '#D5D1CC',\n  '#E5A09B',\n  '#F2D0D2',\n  '#FA7A89',\n  '#F4BDC3',\n  '#EE7E96',\n  '#F4BED0',\n  '#CE899E',\n  '#E6BECC'\n]\n\nexport const menuColors = ['#EE7E96', '#E5A09B', '#f5e49c', '#8892B6', '#5497A0', '#58A289']\n","//@ts-check\nimport { Chip, Tooltip, withStyles } from '@material-ui/core'\nimport { inject, observer } from 'mobx-react'\nimport React from 'react'\nimport { bg2 } from '../../styles/colors'\nimport compose from '../../utils/compose'\n\nconst styles = theme => ({\n  tag: { height: 20, marginRight: 6 }\n})\n\nconst enhance = compose(\n  // @ts-ignore\n  withStyles(styles),\n  inject('dbStore'),\n  observer\n)\n\n/**\n * @typedef Props\n * @prop {string} name\n * @prop {Object} classes\n */\n\n/**\n * @param {Props} props\n */\nfunction TagWidget(props) {\n  // @ts-ignore\n  const { classes, name, dbStore, fallbackColor = bg2 } = props\n  const tag = dbStore.getTagByName(name)\n  const style = { backgroundColor: tag?.color || fallbackColor, ...props.style }\n\n  if (props.onClick) {\n    style.cursor = 'pointer'\n  }\n  const chip = <Chip size=\"small\" label={name} className={classes.tag} style={style} onClick={props.onClick} />\n  if (tag?.description) {\n    return <Tooltip title={tag.description}>{chip}</Tooltip>\n  } else {\n    return chip\n  }\n}\n\n// @ts-ignore\nexport default enhance(TagWidget)\n","/*\n * takes an unlimited amount of functions as arguments and composes them to a single function\n * which, when called, calls each one in order with the return value of the latest\n * */\n\nfunction compose(...fns) {\n  return fns.reduce((a, b) => (...args) => a(b(...args)))\n}\n\nexport default compose\n","//@ts-check\nimport React from 'react'\nimport { CommandLineIcon, LandingIcon, StartIcon } from '../icons'\nimport {\n  ArrowBack,\n  ArrowDownward,\n  ArrowForward,\n  ArrowUpward,\n  FilterNone,\n  Home,\n  HourglassEmpty,\n  KeyboardBackspace,\n  List,\n  Search,\n  TextFields,\n  TouchApp\n} from '@material-ui/icons'\nimport { Chip } from '@material-ui/core'\nimport TagWidget from '../components/widgets/TagWidget'\n\nconst ScanTextOperators = {\n  contains: { id: 'contains', label: 'contain', js: 'scannedText.indexOf(\"searchText\") !== -1' },\n  equals: { id: 'equals', label: 'equal', js: 'scannedText === \"searchText\"' },\n  notContains: { id: 'notContains', label: 'not contain', js: 'scannedText.indexOf(\"searchText\") === -1' },\n  greaterThan: { id: 'greaterThan', label: 'be greater than', js: 'parseFloat(scannedText) > parseFloat(\"searchText\")' },\n  lessThan: { id: 'lessThan', label: 'be less than', js: 'parseFloat(scannedText) < parseFloat(\"searchText\")' }\n}\n\nfunction formatUserfacingStepId(stepId) {\n  return stepId.substr(0, 6).toUpperCase()\n}\n\nfunction formatUserfacingTestId(testId) {\n  return testId.substr(0, 6).toUpperCase()\n}\n\n/**\n * @param {String} str\n * @param {String} separator\n */\nfunction stringToSlug(str, separator) {\n  str = str.trim()\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  const from = 'åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;'\n  const to = 'aaaaaaeeeeiiiioooouuuunc------'\n\n  for (let i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i))\n  }\n\n  return str\n    .replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-') // collapse dashes\n    .replace(/^-+/, '') // trim - from start of text\n    .replace(/-+$/, '') // trim - from end of text\n    .replace(/-/g, separator)\n}\n/**\n * @param {number} duration in seconds\n */\nfunction formatDuration(duration) {\n  var delta = duration\n\n  // calculate (and subtract) whole days\n  var days = Math.floor(delta / 86400)\n  delta -= days * 86400\n\n  // calculate (and subtract) whole hours\n  var hours = Math.floor(delta / 3600) % 24\n  delta -= hours * 3600\n\n  // calculate (and subtract) whole minutes\n  var minutes = Math.floor(delta / 60) % 60\n  delta -= minutes * 60\n\n  // what's left is seconds\n  var seconds = delta % 60\n\n  if (days) {\n    days = `${days}d `\n  } else {\n    days = ''\n  }\n  return `${days}${min2Digits(hours)}:${min2Digits(minutes)}:${min2Digits(Math.floor(seconds))}`\n}\n\nconst min2Digits = number => {\n  if (number < 10) {\n    return '0' + number\n  }\n  return number\n}\n\n/**\n * Convert ms to human readable time\n * @param duration\n * @returns string\n */\nconst msToTime = duration => {\n  if (!duration) return ''\n  let seconds = Math.floor((duration / 1000) % 60)\n  let minutes = Math.floor((duration / (1000 * 60)) % 60)\n  let hours = Math.floor((duration / (1000 * 60 * 60)) % 24)\n\n  if (hours < 10) {\n    hours = '0' + hours\n  }\n  if (minutes < 10) {\n    minutes = '0' + minutes\n  }\n  if (seconds < 10) {\n    seconds = '0' + seconds\n  }\n  return hours + ':' + minutes + ':' + seconds\n}\n\n/**\n * Convert string to local date time format\n * @param date\n * @returns\n */\nconst toDateTime = date => {\n  if (!date) return ''\n\n  const dateObj = new Date(date)\n\n  if (isNaN(dateObj.getDate())) return ''\n\n  return dateObj.toLocaleDateString() + ' ' + dateObj.toLocaleTimeString()\n}\n\nfunction getRandomCharacter() {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  const index = Math.floor((alphabet.length - 1) * Math.random())\n  return alphabet[index]\n}\n\nfunction trim(string, char) {\n  if (char === ']') char = '\\\\]'\n  if (char === '\\\\') char = '\\\\\\\\'\n  return string.replace(new RegExp('^[' + char + ']+|[' + char + ']+$', 'g'), '')\n}\n\nfunction formatDateForFilename(date) {\n  const dateTimeFormat = new Intl.DateTimeFormat('de', {\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n  })\n  const [\n    { value: day },\n    ,\n    { value: month },\n    ,\n    { value: year },\n    ,\n    { value: hour },\n    ,\n    { value: minute },\n    ,\n    { value: second }\n  ] = dateTimeFormat.formatToParts(date)\n  const dateTimeStr = `${year}-${month}-${day}-${hour}-${minute}-${second}`\n  return dateTimeStr\n}\n\nfunction formatDateTime(date) {\n  if (!date) return ''\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\n/**\n * Similar to grep:\n * 1. Filter each line by looking for a string.\n * 2. Remove removeString\n * 3. Return first line\n * @param {string} string\n * @param {string} search regex eg. \"myVariable=([0-9])\"\n * @returns {string}\n */\nfunction filterMultiline(string, search) {\n  const lines = string.split('\\n')\n  const filteredLines = lines.map(line => line.trim()).filter(line => line.length > 0)\n  const results = []\n  const regex = new RegExp(search)\n\n  filteredLines.forEach(line => {\n    const match = line.match(regex)\n    if (match) {\n      if (match.length > 1) {\n        results.push(match[1].replace('\\r', '').trim())\n      } else {\n        results.push(match[0].replace('\\r', '').trim())\n      }\n    }\n  })\n\n  if (results.length > 1) {\n    console.warn('Multiple lines found:', results)\n    return results[0]\n  } else if (results.length === 1) {\n    return results[0]\n  } else {\n    return null\n  }\n}\n\nfunction truncateStart(string, maxLength) {\n  if (string.length > maxLength) {\n    string = '...' + string.substring(string.length - maxLength, string.length)\n  }\n  return string\n}\n\nfunction truncate(string, maxLength) {\n  if (string.length > maxLength + 3) {\n    string = string.substring(0, maxLength - 3) + '...'\n  }\n\n  return string\n}\n\n/**\n *\n * @param {string} string\n * @param {Object.<string, string>} replaceDict\n * @returns String\n */\nfunction replaceAllDict(string, replaceDict) {\n  for (var key in replaceDict) {\n    // @ts-ignore\n    string = replaceAll(string, key, replaceDict[key])\n  }\n  return string\n}\n/**\n * Replaces all occurenses of a string\n * @param {string} string\n * @param {string} search\n * @param {string} replacement\n */\nfunction replaceAll(string, search, replacement) {\n  return string.split(search).join(replacement)\n}\n\nfunction getScanTextLabel(step) {\n  if (step.scanTextLabel) return step.scanTextLabel\n  // in batchViewer we can't access view properties because we don't have MST models. This is the fallback:\n  return ScanTextOperators[step.operator]?.label\n}\n\n/**\n * Return step name according to the type of step\n * @param step\n * @param type\n * @returns\n */\nconst getStepInfo = (step, type = 'all', tagWidget = true) => {\n  let start = ''\n  let end = ''\n  let sDrop = ''\n  let iconDrop = null\n\n  const pDrop = step.longClick ? ' and drop' : ''\n\n  if (step.type === 'drag') {\n    if (step.stopOnFingerprintFound) {\n      sDrop = `until fingerprint is found`\n    } else if (step.isHorizontalDrag) {\n      iconDrop = step.horizontalDragDirection > 0 ? ArrowForward : ArrowBack\n      start = `${step.firstDragPoint.infoStringX}`\n      end = `${step.lastDragPoint.infoStringX}`\n      sDrop = `${start} -> ${end}`\n    } else {\n      iconDrop = step.verticalDragDirection > 0 ? ArrowDownward : ArrowUpward\n      start = `${step.firstDragPoint.infoStringY}`\n      end = `${step.lastDragPoint.infoStringY}`\n      sDrop = `${start} -> ${end}`\n    }\n  }\n\n  let textLabel\n\n  if (step.type === 'text') {\n    const actions = []\n    step.clearText && actions.push('Clear text')\n    step.text && actions.push('Type')\n    textLabel = actions.join(' and ')\n  }\n\n  const allSteps = {\n    click: {\n      icon: TouchApp,\n      primary: step.longClick ? 'Long Click' : 'Click',\n      secondary: 'on fingerprint',\n      cmdLineIcon: '👆'\n    },\n    drag: {\n      icon: iconDrop,\n      primary: `Drag ${step.dragAndDropGuess ? 'around' : step?.dragDirection || ''}${pDrop}`,\n      secondary: sDrop,\n      cmdLineIcon: '👆'\n    },\n    waitForTemplate: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: 'for fingerprint to show',\n      cmdLineIcon: '⏳'\n    },\n    waitForDuration: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: `for ${step.duration} ms ${step.subtype === 'waitForAnimationFinish' ? ' (screen animation)' : ''}`,\n      cmdLineIcon: '⏳'\n    },\n    waitForKeyboard: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: 'for keyboard to show up',\n      cmdLineIcon: '⌨️'\n    },\n    text: {\n      icon: TextFields,\n      primary: textLabel,\n      secondary: step.text && `\"${step.text}\"`,\n      cmdLineIcon: '📝'\n    },\n    scanText: {\n      primary: 'Scan for text',\n      secondary: '',\n      cmdLineIcon: '🔎'\n    },\n    home: {\n      icon: Home,\n      primary: 'Home press',\n      secondary: '',\n      cmdLineIcon: '🏠'\n    },\n    back: {\n      icon: KeyboardBackspace,\n      primary: 'Back press',\n      secondary: '',\n      cmdLineIcon: '⬅️'\n    },\n    appSwitch: {\n      icon: FilterNone,\n      primary: 'Show app switch',\n      secondary: '',\n      cmdLineIcon: '📱'\n    },\n    templateAssertion: {\n      icon: Search,\n      primary: 'Check specific element',\n      secondary: '',\n      cmdLineIcon: '✅'\n    },\n    someContentAssertion: {\n      primary: 'Check some dynamic element',\n      secondary: '',\n      cmdLineIcon: '✅'\n    },\n    someContentClick: {\n      primary: 'Click',\n      secondary: 'on some content at x/y',\n      cmdLineIcon: '👆'\n    },\n    startApp: {\n      icon: StartIcon,\n      primary: 'Start App',\n      secondary: [step.packageName, step.iosBundleId].join(' | '),\n      cmdLineIcon: '🚀'\n    },\n    stopApp: {\n      icon: LandingIcon,\n      primary: 'Stop App',\n      secondary: step.packageName ? step.packageName : step.iosBundleId,\n      cmdLineIcon: '🛬'\n    },\n    execScript: {\n      icon: CommandLineIcon,\n      primary: step.language === 'cli' ? 'Exec Command Line Script' : 'Exec JavaScript',\n      secondary: step.script,\n      cmdLineIcon: '>'\n    },\n    subTest: {\n      icon: List,\n      primary: 'SubTest',\n      secondary: '',\n      cmdLineIcon: '>'\n    },\n    scanTextAssertion: {\n      icon: Search,\n      primary: 'Check for text',\n      secondary: step.assertionJs ? `Check: ${step.assertionJs}` : `Scanned text should ${getScanTextLabel(step)} \"${step.searchText}\"`,\n      cmdLineIcon: '✅'\n    },\n    scanTextClick: {\n      primary: 'Click on text',\n      secondary: `\"${step.searchText}\"`,\n      cmdLineIcon: '👆'\n    },\n    scanTextWait: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: step.assertionJs ? `Until true: ${step.assertionJs}` : `Until scanned text ${getScanTextLabel(step)} \"${step.searchText}\"`,\n      cmdLineIcon: '⏳'\n    }\n  }\n\n  const noDesc = 'No description found for this element'\n  const stepText = allSteps[step.type] || {\n    primary: noDesc,\n    secondary: noDesc,\n    icon: TouchApp,\n    cmdLineIcon: '👆'\n  }\n  if (step.optional) stepText.primary = `Optional ${stepText.primary}`\n  if (tagWidget && step.tags) {\n    stepText.secondary = (\n      <span>\n        {stepText.secondary}{' '}\n        {step.tags.map(tag => (\n          <TagWidget name={tag} key={tag} />\n        ))}\n      </span>\n    )\n  }\n  return type === 'all' ? stepText : stepText[type]\n}\n\nfunction addReplacementStringsWithEnvVars(str, replaceStrings) {\n  const vars = str.match(/\\$[a-zA-Z0-9_]*/g)\n  vars?.forEach(envVar => {\n    if (!replaceStrings[envVar]) {\n      replaceStrings[envVar] = process.env[envVar.replace('$', '')]\n    }\n  })\n}\n\n// For some reason we used a single number to version mapping in the iOS connector\n// In the long run I'd like to get rid of it.\nconst protocolToVersionNum = num => {\n  const str = '' + num\n  return [str[0], str[1], str[2]].join('.')\n}\n\nconst getPropFromIosPackageInfo = (packageInfo, prop) => {\n  /**\n   *CFBundleIdentifier = \"com.stephanpetzl.film-o-matic\";\n    CFBundleInfoDictionaryVersion = \"6.0\";\n    CFBundleName = MovieSwift;\n    CFBundleVersion = 1400;\n    ...\n   */\n  const regex = new RegExp(`${prop} = (.*);`)\n  const matches = regex.exec(packageInfo)\n  if (matches && matches.length > 1) {\n    return replaceAll(matches[1], '\"', '').trim()\n  } else return undefined\n}\n\nconst stacktraceToLineNumber = stack => {\n  const regex = new RegExp(`([0-9]+:[0-9]+)`)\n  const matches = regex.exec(stack)\n  if (!matches?.length) {\n    return ''\n  } else {\n    const lineAndCol = matches[1].split(':')\n    // not really sure why we need to subtract 2 here, but it seems to work\n    return `line ${parseInt(lineAndCol[0]) - 2}, column ${lineAndCol[1]}`\n  }\n}\n\nexport {\n  stringToSlug,\n  truncate,\n  truncateStart,\n  formatDuration,\n  getRandomCharacter,\n  trim,\n  formatDateForFilename,\n  filterMultiline,\n  replaceAll,\n  replaceAllDict,\n  formatUserfacingStepId,\n  formatUserfacingTestId,\n  formatDateTime,\n  msToTime,\n  toDateTime,\n  getStepInfo,\n  addReplacementStringsWithEnvVars,\n  ScanTextOperators,\n  protocolToVersionNum,\n  getPropFromIosPackageInfo,\n  stacktraceToLineNumber\n}\n","import { Typography } from '@mui/material'\nimport React from 'react'\nimport { darkBg2 } from '../../../styles/colors'\n\ninterface Props {\n  name: String\n  value: String | number\n}\n\nconst lineStyle = '1px solid ' + darkBg2\n\nconst separatorStyle = {\n  borderBottom: lineStyle,\n  marginBottom: 8,\n  paddingBottom: 6\n}\n\nexport const NameValue = (props: Props) => {\n  const { name, value } = props\n\n  let val\n  if (!Boolean(value) && '' + value !== '0') {\n    val = 'Not available'\n  } else {\n    val = value\n  }\n  return (\n    <div style={separatorStyle}>\n      <Typography variant=\"h3\">{name}</Typography>\n      <Typography variant=\"h2\" style={{ fontSize: '1.0rem' }}>\n        {val}\n      </Typography>\n    </div>\n  )\n}\n","import { withStyles } from '@material-ui/core'\nimport { ArrowForwardIos } from '@material-ui/icons'\nimport { List, ListItem, ListItemIcon, ListItemText, MenuItem, Select, TextField, Typography } from '@mui/material'\nimport * as React from 'react'\nimport { TestIcon } from '.'\nimport { formatDuration, formatUserfacingTestId as formatId, toDateTime } from '../../../lib/StringUtils'\nimport { darkBg, darkBg2, defaultBg, errorGradient, errorWarm, success, successGradient, superLight } from '../../../styles/colors'\nimport { StepResult, Test, TestRun } from '../types'\nimport { NameValue } from './NameValue'\n\nconst ariaLabel = { 'aria-label': 'description' }\nconst Metrics: any = {\n  duration: 'Test Run Duration',\n  appStartupDuration: 'App Startup Duration',\n  skippedFramesCount: 'Skipped Frames Count'\n}\ninterface SidebarProps {\n  activeTab: number | null\n  onTestSelect: (index: number, test: Test) => void\n}\n\nconst typoStyle = {\n  fontSize: '0.9rem',\n  lineHeight: '1.3'\n}\n\nconst lineStyle = '1px solid ' + darkBg2\nconst FirstColWidth = 120\n\nconst listItemStyle = {\n  paddingRight: 0,\n  paddingLeft: 0\n}\n\nconst CssTextField = withStyles({\n  root: {\n    '& input': {\n      color: defaultBg,\n      fontWeight: '100'\n    },\n    '& label.Mui-focused': {\n      color: defaultBg\n    },\n    // hover border color\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '1px solid ' + superLight\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: superLight\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: defaultBg\n    }\n  }\n})(TextField)\n\nconst CssSelect = withStyles({\n  root: {\n    '& input': {\n      color: defaultBg,\n      fontWeight: '100'\n    },\n    '& label.Mui-focused': {\n      color: defaultBg\n    },\n    // hover border color\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '1px solid ' + superLight\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: superLight\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: defaultBg\n    }\n  }\n})(Select as any)\n\nconst renderTestResultRows = (test: Test, index: number, metric: string, maxValue: number) => {\n  //test.testRuns.sort((a: any, b: any) => Date.parse(b.date) - Date.parse(a.date))\n  const testRuns: TestRun[] = test.testRuns\n  return (\n    <>\n      {testRuns.map((tr: TestRun, index: number) => (\n        <TestResultRow key={tr.id} testRun={tr} metric={metric} maxValue={maxValue} />\n      ))}\n    </>\n  )\n}\ninterface TestResultRowProps {\n  testRun: TestRun\n  metric: string\n  maxValue: number\n}\n\nconst TestResultRow = (props: TestResultRowProps) => {\n  const { testRun, metric, maxValue } = props\n  const value = testRun[metric]\n  let formatedValue, percentage\n  if (value) {\n    formatedValue = '' + value\n    switch (metric) {\n      case 'duration':\n        formatedValue = value > 1000 ? formatDuration(value / 1000) : value + ' ms'\n        break\n      case 'appStartupDuration':\n        formatedValue = value + ' ms'\n        break\n    }\n    percentage = (100.0 * value) / maxValue\n  } else {\n    formatedValue = 'N/A'\n    percentage = 0\n  }\n\n  return (\n    <Typography style={{ display: 'flex', flexDirection: 'row' }} variant=\"body2\" component=\"div\">\n      <div style={{ width: FirstColWidth }}>{toDateTime(testRun.date)}</div>\n      <div style={{ marginRight: 10 }}>{formatedValue}</div>\n\n      <div style={{ display: 'flex', flexGrow: 1, alignItems: 'center' }}>\n        <div style={{ height: 3, width: `${percentage}%`, background: testRun.wasSuccessful ? successGradient : errorGradient }}></div>\n      </div>\n    </Typography>\n  )\n}\nconst getMaxValue = (fieldName: string) => {\n  var maxValue = Number.MIN_VALUE\n\n  batchRun.tests.forEach((t: any) =>\n    t.testRuns.forEach((tr: any) => {\n      if (tr[fieldName]) {\n        maxValue = Math.max(maxValue, tr[fieldName])\n      }\n    })\n  )\n\n  return maxValue\n}\n\nexport const Sidebar = (props: SidebarProps) => {\n  const { activeTab, onTestSelect } = props\n  const [values, setValues] = React.useState({ searchKey: '', filter: 'all', currentMetric: 'duration' })\n  const [tests, setTests] = React.useState(batchRun.tests)\n\n  var maxMetricValue = getMaxValue(values.currentMetric)\n  // active 1st test\n  const defaultTest = React.useCallback((tests: Test[]) => {}, [])\n\n  // filter the tests on the basis of search string or select filter\n  const search = React.useCallback(() => {\n    const { filter } = values\n\n    const searchKey = values.searchKey.toLowerCase()\n\n    if (!searchKey && filter === 'all') {\n      setTests(batchRun.tests)\n      return\n    }\n\n    let filteredTests: any = batchRun.tests\n\n    if (searchKey)\n      filteredTests = filteredTests.filter(\n        (test: Test) =>\n          test?.id?.toLowerCase().includes(searchKey) ||\n          test?.title?.toLowerCase().includes(searchKey) ||\n          test.deviceData?.name?.toLowerCase().includes(searchKey)\n      )\n\n    if (filter && filter !== 'all')\n      filteredTests = filteredTests.filter((test: Test) => {\n        const lastTestRun = test?.testRuns[test?.testRuns.length - 1]\n        const steps = lastTestRun?.stepResults.filter((step: StepResult) => step.success === (filter === 'successful')) // get steps according to selected option\n\n        if (filter === 'failed') return steps.length > 0 // if single step is found means it's failed test\n        return steps.length === lastTestRun?.stepResults.length // else all steps true\n      })\n\n    setTests(filteredTests)\n    defaultTest(filteredTests) // active 1st test by default\n  }, [values, defaultTest])\n\n  // when input changed then do search\n  const onChange = (e: any) => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n\n  React.useEffect(() => {\n    search() // perform search whenever filter OR search input value changed\n  }, [values, search])\n\n  // active 1st test by default\n  React.useEffect(() => {\n    defaultTest(batchRun.tests as any)\n  }, [defaultTest])\n\n  const spacing = 30\n  const successPercentage = (100.0 * batchRun.stats?.successCount) / batchRun.stats?.totalCount\n\n  return (\n    <div\n      id=\"sidebar\"\n      style={{\n        color: 'white',\n        flexBasis: activeTab === null ? '100%' : '50%',\n        height: '100%'\n      }}\n    >\n      <div\n        id=\"left-col\"\n        style={{\n          width: 230,\n          background: darkBg,\n          padding: 60,\n          flexBasis: 'auto',\n          flexGrow: 0,\n          overflow: 'auto'\n        }}\n      >\n        <img src=\"assets/logo.png\" alt=\"logo\" style={{ maxWidth: 140, marginBottom: 100 }} />\n        <div>\n          <Typography variant=\"h3\" component=\"div\">\n            Batch Run Report:\n          </Typography>\n          <Typography variant=\"h1\" component=\"div\" style={{ marginBottom: 26 }}>\n            {batchRun.title}\n          </Typography>\n\n          <div style={{ position: 'relative', marginBottom: spacing }}>\n            <svg width=\"100%\" height=\"100%\" viewBox={`3.8 3.8 34.4 34.4`} className=\"donut\">\n              <circle className=\"donut-ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke={errorWarm} strokeWidth=\"2\"></circle>\n\n              <circle\n                className=\"donut-segment\"\n                cx=\"21\"\n                cy=\"21\"\n                r=\"15.91549430918954\"\n                fill=\"transparent\"\n                stroke={success}\n                strokeWidth=\"2.05\"\n                strokeDasharray={successPercentage + ' ' + (100 - successPercentage)}\n                strokeDashoffset={25}\n              ></circle>\n            </svg>\n            <div\n              style={{ position: 'absolute', display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', top: 0 }}\n            >\n              <Typography sx={typoStyle} component=\"div\" style={{ width: 'fit-content' }}>\n                <div style={{ borderBottom: lineStyle, marginBottom: 4 }}>\n                  {`${batchRun.stats?.failCount} failed`}\n                  <br />\n                  {`${batchRun.stats?.successCount} successful`}\n                  <br />\n                </div>\n                {`${batchRun.tests?.length} total`}\n              </Typography>\n            </div>\n          </div>\n\n          <NameValue name=\"Batch Run Date:\" value={toDateTime(batchRun?.createdOn)} />\n          <NameValue name=\"Duration:\" value={batchRun.stats?.duration} />\n          <NameValue name=\"Steps Executed:\" value={batchRun.stats?.stepsCount} />\n        </div>\n      </div>\n      <div\n        id=\"right-col\"\n        className={activeTab !== null ? 'hideInPrintVersion' : ''}\n        style={{\n          background: darkBg2,\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <div style={{ display: 'flex', marginBottom: 16, padding: 40, paddingBottom: 10, alignItems: 'center' }}>\n          <div style={{ flexBasis: activeTab === null ? '50%' : '100%', display: 'flex' }}>\n            <CssTextField\n              variant=\"standard\"\n              style={{ flexBasis: '44%', flexGrow: 1, marginRight: 30 }}\n              placeholder=\"Search (title, id)\"\n              name=\"searchKey\"\n              onChange={onChange}\n              inputProps={ariaLabel}\n            />\n\n            <CssSelect variant=\"standard\" name=\"filter\" onChange={onChange} value={values.filter} style={{ flexGrow: 1, flexBasis: '10%' }}>\n              <MenuItem value=\"all\">All</MenuItem>\n              <MenuItem value=\"successful\">Successful</MenuItem>\n              <MenuItem value=\"failed\">Failed</MenuItem>\n            </CssSelect>\n          </div>\n          {activeTab === null && (\n            <>\n              <Typography\n                component=\"div\"\n                variant=\"body1\"\n                style={{\n                  paddingRight: 10,\n                  paddingLeft: 30\n                }}\n              >\n                Performance Metric:\n              </Typography>\n              <CssSelect variant=\"standard\" name=\"currentMetric\" onChange={onChange} value={values.currentMetric}>\n                {Object.keys(Metrics).map((metric, index) => (\n                  <MenuItem key={metric} value={metric}>\n                    {Metrics[metric]}\n                  </MenuItem>\n                ))}\n              </CssSelect>\n            </>\n          )}\n        </div>\n\n        <List disablePadding={true} style={{ overflow: 'auto', height: '100%', padding: 40, paddingTop: 0 }}>\n          {tests.map((test: any, index: number) => (\n            <ListItem\n              button\n              divider\n              key={test.id + index}\n              style={listItemStyle}\n              onClick={() => {\n                onTestSelect(index, test)\n              }}\n            >\n              <ListItemIcon sx={{ color: 'white', minWidth: 36 }}>\n                <TestIcon test={test} />\n              </ListItemIcon>\n\n              <ListItemText primary={`${test.title}`} secondary={`ID: ${formatId(test.id)}`} style={{ flexGrow: 1, width: 0 }} />\n\n              <ArrowForwardIos style={{ opacity: activeTab === index ? 1 : 0 }} />\n              {activeTab === null && (\n                <div style={{ flex: 1, flexDirection: 'row', flexGrow: 1 }}>\n                  <div>{renderTestResultRows(test, index, values.currentMetric, maxMetricValue)}</div>\n                </div>\n              )}\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Grid, Typography } from '@mui/material'\nimport { Test } from '../types'\nimport { msToTime, formatUserfacingTestId as formatId, toDateTime } from '../../../lib/StringUtils'\nimport { NameValue } from './NameValue'\nimport { errorGradient, successGradient } from '../../../styles/colors'\n\ninterface Props {\n  test: Test\n  failStepRef: any\n}\n\nexport const TestInfo = (props: Props) => {\n  const { test, failStepRef } = props\n  // latest testRun, assuming testRuns are sorted by date ASC (which should always be the case)\n\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  console.log('test.testRuns', test.testRuns)\n  const packageData = testRun?.appVersions[0]\n  const stepResults = testRun?.stepResults\n\n  const successSteps = stepResults.filter(result => result.success)\n  const failedSteps = stepResults.filter(result => !result.success)\n  const isFailedTest = failedSteps.length > 0\n  const isDeviceSame = test.deviceData.serial === testRun.deviceData.serial // is test recorded & executed on same device\n\n  const scrollToFailStep = React.useCallback(() => {\n    failStepRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }, [failStepRef])\n\n  React.useEffect(() => {\n    const scrollContainer = document.getElementById('scrollContainer')\n    if (isFailedTest) {\n      setTimeout(() => scrollToFailStep(), 600) // delay scroll so images get loaded\n      return\n    }\n    scrollContainer?.scrollTo({ top: 0, left: 0, behavior: 'auto' }) // if not failed step then scroll to top\n  }, [test.id, isFailedTest, failStepRef, scrollToFailStep])\n\n  const stepsFailedStyle = { fontSize: '1rem', textDecoration: 'auto', cursor: 'auto' }\n  if (failedSteps.length > 0) {\n    stepsFailedStyle.textDecoration = 'underline'\n    stepsFailedStyle.cursor = 'pointer'\n  }\n\n  if (!testRun) {\n    return null\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h1\" component=\"div\" style={{ marginBottom: 20, marginTop: 7 }}>\n        {test.title} (ID: {formatId(test.id)})\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <NameValue name=\"Test Created:\" value={toDateTime(test?.createdOn)} />\n          <NameValue name=\"Package Name:\" value={packageData?.packageName} />\n          <NameValue name=\"Test Run Duration:\" value={msToTime(testRun?.duration)} />\n          <NameValue name=\"App Min Sdk:\" value={packageData?.minSdk} />\n          <NameValue name=\"Install Date:\" value={toDateTime(packageData?.firstInstallTime)} />\n        </Grid>\n        <Grid item xs={6}>\n          <NameValue name=\"Test Run Date:\" value={toDateTime(testRun?.date)} />\n          <NameValue name=\"Package Version:\" value={packageData?.name} />\n          <NameValue name=\"App Code:\" value={packageData?.code} />\n          <NameValue name=\"App Target Sdk:\" value={packageData?.targetSdk} />\n          <NameValue name=\"Last Update Date:\" value={toDateTime(packageData?.lastUpdateTime)} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3} style={{ marginBottom: 20 }}>\n        <Grid item xs={isDeviceSame ? 12 : 6}>\n          <NameValue\n            name={`Device ${isDeviceSame ? '' : '(Recorded)'}:`}\n            value={test?.deviceData?.name + ' / ' + test?.deviceData.os + ' ' + (test?.deviceData?.osVersion || '')}\n          />\n        </Grid>\n        {!isDeviceSame && (\n          <Grid item xs={6}>\n            <NameValue\n              name=\"Device (Executed):\"\n              value={testRun?.deviceData?.name + ' / ' + testRun?.deviceData.os + ' ' + (testRun?.deviceData?.osVersion || '')}\n            />\n          </Grid>\n        )}\n      </Grid>\n\n      <div\n        style={{\n          borderRadius: 4,\n          padding: 10,\n          background: testRun.wasSuccessful ? successGradient : errorGradient\n        }}\n      >\n        <Typography sx={{ fontSize: '1rem' }} variant=\"h6\">\n          {`${test.stepsCountWithSubTestSteps} steps: ${successSteps.length} successful / `}\n          <Typography component=\"span\" sx={stepsFailedStyle} variant=\"h6\" onClick={() => (failedSteps.length > 0 ? scrollToFailStep() : null)}>\n            {`${failedSteps.length}  failed`}\n          </Typography>\n        </Typography>\n\n        {isFailedTest && (\n          <Typography sx={{ fontSize: '1rem', whiteSpace: 'break-spaces' }} variant=\"h6\">\n            Status Message:{` ${failedSteps[0]?.message}`}\n          </Typography>\n        )}\n      </div>\n    </div>\n  )\n}\n","export default {\n  STORE_VERSION: 15,\n  TEST_FORMAT_VERSION: 4,\n  STORE_VERSION_KEY: 'db_store_version',\n  STORE_KEY: 'db_store'\n}\n\n/**\n * This is the root of our data store.\n * It holds all the business data as well as all the application UI state data (-> uiStore)\n * In the future all non-ui data should be synced to a server, so team collaborators can access the same tests\n */\nexport const ROOT_TREE_NODE_ID = 'ROOT_TREE_NODE_ID'\n//export const FIRST_TEST_BATCH_ID = 'DEFAULT_BATCH_ID'\n\nexport const DEFAULT_FOLDERS_SNAPSHOT = {\n  id: ROOT_TREE_NODE_ID,\n  title: 'All tests',\n  children: [{ id: 'default-node', title: 'Recorded tests', children: [] }] // create a single default folder\n}\n\nexport const BatchRunExportDataDirName = 'data'\n","import React from 'react'\nimport { Chip, Tooltip } from '@material-ui/core'\nimport { bg2 } from '../../../styles/colors'\n\ninterface Props {\n  name: string\n}\n\nfunction TagWidget(props: Props) {\n  const { name } = props\n  const tag = tagsMapping.find(t => t.name === name)\n  const style = { backgroundColor: tag?.color || bg2, marginLeft: 8, height: 20 }\n  const chip = <Chip size=\"small\" label={name} style={style} />\n\n  return (\n    <>\n      <span>\n        <Tooltip title={tag?.description || ''}>{chip}</Tooltip>\n      </span>\n    </>\n  )\n}\n\nexport default TagWidget\n","import React from 'react'\nimport { matchColor, roiColor } from '../../../styles/colors'\n\nconst RectView = ({ match, opacity, style }: any) => {\n  let renderStyle: any = {\n    position: 'absolute',\n    fontSize: 9,\n    left: `${match?.position?.x * 100}%`,\n    top: `${match?.position?.y * 100}%`,\n    width: `${match?.size?.width * 100}%`,\n    height: `${match?.size?.height * 100}%`,\n    opacity: opacity ? opacity : 1,\n    outline: `2px solid ${matchColor}`,\n    boxShadow: '0px 0px 40px 32px #0000006b'\n  }\n\n  if (style) {\n    renderStyle = { ...renderStyle, ...style }\n  }\n\n  return <div style={renderStyle}>{/*p: {match.probability.toFixed(3)}*/}</div>\n}\n\nexport const ImageMatchView = (props: any) => {\n  const borderRadius = 5\n  const { matchIndex, matches, selection, roi, maxWidth, style, src, children, ...rest } = props\n\n  return (\n    <div\n      {...rest}\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        maxWidth: maxWidth,\n        borderRadius,\n        ...style\n      }}\n    >\n      <img src={src} width=\"100%\" alt=\"ImageMatchView\" style={{ borderRadius, display: 'block' }} />\n\n      {matches && matches.length\n        ? matches.map((match: any, index: any) => <RectView key={index} match={match} opacity={index === matchIndex ? 1 : 0.25} />)\n        : selection && <RectView rect={selection} />}\n\n      {roi && (\n        <RectView\n          rect={roi}\n          style={{\n            color: roiColor\n            // border: `1px solid ${successLight}`,\n            // outline: '1000px solid #510000b5'\n          }}\n        />\n      )}\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { superLight } from '../../../../styles/colors'\n\ninterface Props {\n  height?: string\n  top?: string\n  left?: string\n  showTip?: boolean\n}\n\nexport const VerticalLine = (props: Props) => {\n  const { height, showTip = true } = props\n  return (\n    <div\n      className=\"vl\"\n      style={{\n        borderRight: `2px solid ${superLight}`,\n        height: height || '30px'\n        // marginTop: '5px'\n      }}\n    >\n      {showTip && (\n        <div\n          className=\"point\"\n          style={{\n            position: 'absolute',\n            borderTop: `12px solid ${superLight}`,\n            borderRight: '8px solid transparent',\n            borderLeft: '8px solid transparent',\n            marginLeft: '-7px',\n            top: '100%'\n          }}\n        ></div>\n      )}\n    </div>\n  )\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport { Avatar, CardHeader, Typography } from '@mui/material'\nimport React from 'react'\nimport { BatchRunExportDataDirName } from '../../../config'\nimport { errorGradient, errorMedium, errorWarm, success, successFont, successGradient, superLight, turmeric } from '../../../styles/colors'\nimport { Step, StepResult, Test, TestRun } from '../types'\nimport { formatUserfacingTestId as formatId, getStepInfo } from '../../../lib/StringUtils'\nimport TagWidget from './TagWidget'\nimport { ImageMatchView } from './ImageMatchView'\nimport { VerticalLine } from './common'\n\ninterface Props {\n  test: Test\n  testRun: TestRun\n  index: number\n  step: Step\n  stepResult: StepResult\n  referenceSResult: StepResult | null\n  refList: React.RefObject<HTMLImageElement>[]\n  failStepRef: React.MutableRefObject<null>\n}\n\nconst stepType = {\n  fontSize: '0.7rem',\n  color: 'rgba(0, 0, 0, 0.6)'\n}\nconst stepImageIcon: React.CSSProperties = {\n  width: 'auto',\n  maxHeight: '3rem'\n  // margin: '11px'\n}\n\nconst hBox: any = (org = true) => {\n  return {\n    position: 'absolute',\n    bottom: 0,\n    textAlign: 'center',\n    width: '100%',\n    borderRadius: '0 0 4px 4px'\n  }\n}\n\nconst lBox: any = (org = true) => {\n  return {\n    position: 'absolute',\n    width: '600px',\n    bottom: org ? '200px' : '0'\n  }\n}\nconst formatPercentage = (value: string) => {\n  const valueNum = parseFloat(value)\n  return `${(valueNum * 100).toFixed(2)}%`\n}\n\nconst pStep = (step: Step, stepName: string) => (\n  <React.Fragment>\n    <span>{stepName}</span>\n    <span style={stepType}>{` ID: ${formatId(step?.id)}`}</span>\n  </React.Fragment>\n)\n\nconst stepImage = (test: Test, name: string, style: React.CSSProperties) => (\n  <React.Fragment>\n    <img style={style} src={name} alt={test.id} />\n  </React.Fragment>\n)\n\n// arrows to point out towards the next step\nconst getArrows = (testRun: TestRun, index: number) => {\n  const nextStep = testRun.stepResults[index]\n  if (!nextStep) return\n  // const step = stepResults[index - 1]\n  return <VerticalLine height=\"30px\" />\n}\n\nconst localeDateFormat = (date: number | undefined) => {\n  if (!date) return\n  return new Date(date).toLocaleString()\n}\n\nexport const StepsItem = (props: Props) => {\n  const { test, testRun, index, step, refList, stepResult, referenceSResult, failStepRef } = props\n  const [isDiffBatchHovered, setDiffBatchHovered] = React.useState(false)\n  const [isDiffViewHovered, setDiffViewHovered] = React.useState(false)\n  const baseSrc = `./${BatchRunExportDataDirName}/${test.id}`\n  const trBaseSrc = `testRuns/${testRun.deviceData?.serial}`\n\n  const stepName = getStepInfo(step as Step, 'all', false)\n  const isSuccess = stepResult?.success\n  // const stepBG = stepResult?.copy ? '#bdbdbd' : isSuccess ? success : error\n  const ref: React.RefObject<HTMLImageElement> = React.createRef()\n  const isCopy = stepResult?.copy\n  const border = `0px solid ${!isSuccess ? errorWarm : turmeric}`\n  const similarityWarnThreshold = Number(test?.similarityWarnThreshold || '0.00')\n  const deviceData = testRun.deviceData\n  const isLandscape =\n    deviceData.currentRotation === deviceData.rotationVars.landscape || deviceData.currentRotation === deviceData.rotationVars.seascape\n\n  refList.push(ref)\n\n  let orgFrameSrc = step?.originalFrame && `${baseSrc}/${step?.originalFrame}`\n  if (referenceSResult) {\n    orgFrameSrc = `${baseSrc}/${trBaseSrc + '/' + referenceSResult.screenshot}`\n  }\n\n  const screenshotSrc = stepResult?.screenshot && `${baseSrc}/${trBaseSrc}/${stepResult?.screenshot}`\n\n  // data to show on image hover\n  const stepHoverDetail = (type: string, isLandscape = true) => {\n    const isOriginal = type === 'org'\n    const stepColor = stepResult?.success ? success : errorWarm // success in case if test passed\n    const backgroundColor = isOriginal ? success : stepColor // original screenshot will always be success\n    const lStyleType = isOriginal ? !!stepResult?.screenshot : false // landscape box positioning if testRun screenshot exist\n    const hStyleType = isOriginal ? true : !step?.originalFrame // horizontal box left right prop if original screenshot exist\n    const text = isOriginal ? (referenceSResult ? 'Reference Test Run' : 'Original') : 'Test Run'\n    const date = isOriginal ? step?.createdOn : stepResult?.createdOn\n    const boxStyle = isLandscape ? lBox(lStyleType) : hBox(hStyleType) // horizontal box or landscape box\n    // const typoStyle = isLandscape ? lTypoStyle : hTypoStyle // horizontal typo or landscape\n\n    return (\n      <div className=\"info\" style={{ ...boxStyle, backgroundColor, paddingTop: 10, height: 55 }}>\n        <Typography variant=\"body1\">{text} Screenshot</Typography>\n        <Typography variant=\"body2\">{localeDateFormat(date)}</Typography>\n      </div>\n    )\n  }\n\n  const renderResult = (src: string | undefined, type: string) => {\n    //const { roi } = calculateRoi(step as Step)\n    if (!src) return placeHolder(type)\n\n    let matches = type === 'org' ? step?.matches : stepResult?.matches\n    if (referenceSResult) {\n      matches = referenceSResult.matches\n    }\n\n    return (\n      <div className=\"matchResult\" style={{ flexBasis: '50%', position: 'relative' }}>\n        <ImageMatchView matchIndex={step?.matchIndex} matches={matches} selection={step?.selection} roi={step?.region} width={200} src={src} />\n\n        {stepHoverDetail(type, false)}\n      </div>\n    )\n  }\n\n  const placeHolder = (type: any) => {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexGrow: 1,\n          position: 'relative',\n          backgroundColor: superLight,\n          borderRadius: 4,\n          minHeight: 300\n        }}\n      >\n        <Typography>Not available</Typography>\n        {stepHoverDetail(type, false)}\n      </div>\n    )\n  }\n\n  const MaxSize = 600\n\n  return (\n    <>\n      <div\n        className=\"stepWrapper\"\n        ref={!isCopy && !isSuccess ? failStepRef : null}\n        style={{\n          minWidth: MaxSize,\n          maxWidth: MaxSize,\n          border: isCopy ? '' : border\n        }}\n      >\n        <CardHeader\n          avatar={\n            <Avatar style={{ backgroundColor: isSuccess ? success : errorWarm }} aria-label=\"step-no\">\n              {stepName.icon && <stepName.icon />}\n            </Avatar>\n          }\n          title={pStep(step as Step, stepName.primary)}\n          subheader={\n            <>\n              <span>{stepName.secondary}</span>\n              {step?.tags?.map((tag: any, index: number) => (\n                <TagWidget name={tag} key={index} />\n              ))}\n            </>\n          }\n          action={step?.image && <>{stepImage(test, `${baseSrc}/${step?.image}`, stepImageIcon)}</>}\n          style={{}}\n        />\n\n        <div\n          style={{\n            borderBottom: '2px solid ' + superLight\n          }}\n        >\n          <div\n            style={{\n              position: 'relative',\n\n              paddingBottom: 20\n            }}\n          >\n            <div style={{ display: 'flex', flexDirection: isLandscape ? 'column' : 'row' }}>\n              {renderResult(orgFrameSrc, 'org')}\n              <div style={{ height: 10, width: 10 }}></div>\n              {renderResult(screenshotSrc, 'testRun')}\n            </div>\n\n            {stepResult?.screenSimilarity && (\n              <>\n                <div style={{ position: 'absolute', bottom: 0, width: '100%', height: 100, overflow: 'hidden' }}>\n                  <div\n                    className={`similarityBatch ${Number(stepResult?.screenSimilarity) > similarityWarnThreshold ? 'above' : 'below'}`}\n                    onMouseEnter={event => setDiffBatchHovered(true)}\n                    onMouseLeave={event => setDiffBatchHovered(false)}\n                  >\n                    <Typography variant=\"body1\">{formatPercentage(stepResult?.screenSimilarity)}</Typography>\n                    <Typography variant=\"body2\">Screen Similarity</Typography>\n                  </div>\n                </div>\n                {(isDiffBatchHovered || isDiffViewHovered) && orgFrameSrc && screenshotSrc && (\n                  <div\n                    onMouseEnter={event => setDiffViewHovered(true)}\n                    onMouseLeave={event => setDiffViewHovered(false)}\n                    className=\"diffImg\"\n                    style={{\n                      width: MaxSize,\n                      height: MaxSize,\n                      position: 'absolute',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      display: 'flex',\n                      backgroundColor: '#FFF',\n                      boxShadow: '0px 2px 28px #00000057',\n                      borderRadius: 5,\n                      top: 0\n                    }}\n                  >\n                    <img\n                      src={orgFrameSrc}\n                      style={{ position: 'absolute', maxHeight: MaxSize, maxWidth: MaxSize, boxShadow: '0px 2px 28px #00000057' }}\n                    />\n                    <img src={screenshotSrc} style={{ position: 'absolute', maxHeight: MaxSize, maxWidth: MaxSize, mixBlendMode: 'difference' }} />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n          {stepResult?.message && (\n            <div\n              style={{\n                borderRadius: 4,\n                padding: 10,\n                background: isSuccess ? successGradient : errorGradient,\n                marginBottom: 20\n              }}\n            >\n              <Typography variant=\"body2\" sx={{ color: isSuccess ? successFont : errorMedium, whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>\n                {stepResult?.message}\n              </Typography>\n            </div>\n          )}\n        </div>\n\n        {/* <CardActions disableSpacing></CardActions> */}\n      </div>\n\n      {getArrows(testRun, index + 1)}\n    </>\n  )\n}\n","import { Box } from '@mui/material'\nimport React from 'react'\nimport { Step, StepResult, Test } from '../types'\nimport { StepsItem } from './StepItem'\n\ninterface Props {\n  test: Test\n  failStepRef: React.MutableRefObject<null>\n}\n\nconst stepBox: any = {\n  display: 'flex',\n  flexDirection: 'column',\n  mt: '10px',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'relative'\n}\n\n// const lTypoStyle: any = {\n//   text: { p: 1, float: 'left' },\n//   date: { p: 1, float: 'right' }\n// }\n// const hTypoStyle: any = {\n//   text: { pt: 1 },\n//   date: { pb: 1 }\n// }\n\nexport const StepsInfo = (props: Props) => {\n  const { test, failStepRef } = props\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  const refTestRun = test?.testRuns.find(\n    (tr, i) => tr.wasSuccessful && tr.stepResults.length && test.testRuns.length !== i + 1 && tr.deviceData?.serial === test.deviceData?.serial\n  )\n\n  if (!testRun) {\n    return null\n  }\n\n  const stepResults = [...testRun?.stepResults] // as we are updating stepResults later so to avoid updating original data\n\n  const refList: React.RefObject<HTMLImageElement>[] = []\n\n  let currSResult: StepResult | null = null\n  let referenceSResult: StepResult | null = null\n  let currStep: Step | null = null\n\n    // verify if there are any missing steps due to failed step\n  ;(() => {\n    const stepsCount = test?.steps?.length\n    const stepRunsCount = stepResults?.length\n    const missingStepRuns = stepsCount - stepRunsCount\n\n    // copy the original steps to stepResults for rendering\n    if (missingStepRuns > 0) {\n      const startCopyFrom = stepsCount - missingStepRuns\n\n      for (let i = startCopyFrom; i < stepsCount; i++) {\n        // console.log('CopyingStep', test?.steps[i]);\n        stepResults[i] = {} as any\n        stepResults[i].step = test?.steps[i]\n        stepResults[i].success = false\n        stepResults[i].copy = true // just to keep record it's copied step\n      }\n    }\n  })()\n\n  return (\n    <>\n      {stepResults.length &&\n        stepResults.map((sResult, index: number) => {\n          const opacity = sResult?.copy ? '0.5' : '1'\n          currSResult = sResult\n          referenceSResult = refTestRun?.stepResults?.find(refSr => refSr.step.id === currSResult?.step.id) || null\n          currStep = sResult.step\n\n          if (currStep.type === 'subTest') return null // this is an extra step recieving from repeato studio so skip it\n\n          return (\n            <Box className=\"stepCard\" sx={{ ...stepBox, opacity }} key={index}>\n              <StepsItem\n                failStepRef={failStepRef}\n                test={test}\n                refList={refList}\n                step={currStep}\n                stepResult={currSResult}\n                referenceSResult={referenceSResult}\n                testRun={testRun}\n                index={index}\n              />\n            </Box>\n          )\n        })}\n    </>\n  )\n}\n","import * as React from 'react'\nimport ListIcon from '@material-ui/icons/List'\nimport { Avatar } from '@material-ui/core'\nimport { Test } from '../types'\nimport { success, bg2, errorWarm } from '../../../styles/colors'\nimport { BatchRunExportDataDirName } from '../../../config'\n\ninterface TestIconProps {\n  test: Test\n}\n\nexport const TestIcon = (props: TestIconProps) => {\n  const { test } = props\n\n  const baseSrc = `./${BatchRunExportDataDirName}/${test.id}`\n  const avatarStyle = { width: 18, height: 18 }\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  const bg = testRun ? (testRun.wasSuccessful ? success : errorWarm) : bg2\n  const stepsWithImage = test.steps.filter(step => Boolean(step.image))\n  const icon = <ListIcon />\n\n  let avatarSrc = ''\n\n  if (stepsWithImage.length > 0) {\n    const lastStep = stepsWithImage[stepsWithImage.length - 1]\n    avatarSrc = `${baseSrc}/${lastStep.originalFrame}`\n  }\n\n  const avatar = (\n    <Avatar src={avatarSrc} style={avatarStyle}>\n      {icon}\n    </Avatar>\n  )\n\n  return (\n    <div className=\"stack-container\">\n      <div style={{ borderRadius: '50%', border: `2px solid ${bg}` }}>{avatar}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { IconButton, ThemeProvider } from '@mui/material'\nimport { Sidebar, StepsInfo, TestInfo } from '../../components'\nimport { createTheme } from '@material-ui/core'\nimport { darkBg, darkBg2, lighterFont, lightestFont, secondary, transparentWhite } from '../../../../styles/colors'\nimport { Close } from '@material-ui/icons'\nimport { Test } from '../../types'\n\nconst commonThemeProps = {\n  typography: {\n    h1: {\n      fontSize: '1.7rem',\n      fontWeight: 400\n    },\n    h2: {\n      fontSize: '1.2rem',\n      fontWeight: 400\n    },\n    h3: {\n      fontSize: '0.8rem',\n      fontWeight: 400,\n      color: darkBg2,\n      marginBottom: 3\n    },\n    h4: {\n      fontSize: '0.7rem',\n      fontWeight: 400\n    },\n    h5: {\n      fontSize: '0.5rem',\n      fontWeight: 400\n    },\n    h6: {\n      // dialog title\n      fontSize: '1.2rem',\n      fontWeight: 400\n    },\n    caption: {\n      // dialog title\n      color: '#999999',\n      fontSize: '0.7rem'\n    },\n    body1: {\n      fontWeight: 400\n    },\n    body2: {\n      fontSize: '0.7rem',\n      fontWeight: 400\n    },\n    subtitle1: {\n      // why does this not work?\n      fontWeight: 400\n    }\n  }\n}\n\nconst darkTheme = createTheme({\n  ...commonThemeProps,\n  palette: {\n    type: 'dark',\n    primary: {\n      main: darkBg\n    },\n    secondary: {\n      main: secondary\n    }\n  }\n})\n\nconst brightTheme = createTheme({\n  ...commonThemeProps,\n  palette: {\n    type: 'light',\n    text: {\n      primary: lighterFont,\n      secondary: lightestFont\n    },\n    primary: {\n      main: darkBg\n    },\n    secondary: {\n      main: secondary\n    }\n  }\n})\nbrightTheme.typography.h1.color = darkBg\nbrightTheme.typography.h2.color = darkBg\n\nexport const BatchReport = (props: any) => {\n  // using index number for selected test - can't used test.id as test can be duplicated in single batch\n\n  const failStepRef = React.useRef(null)\n\n  const [activeTab, setActiveTab] = React.useState<number | null>(null)\n  const [test, setTest] = React.useState<Test | null>(null)\n\n  // verify the report data is valid or not\n  const verifyReportData = () => {\n    try {\n      if (!batchRun?.id || !batchRun?.tests) {\n        alert('Invalid data OR Report file.')\n        return\n      }\n    } catch (error) {\n      alert('Invalid data OR Report file.')\n    }\n  }\n\n  React.useEffect(() => {\n    verifyReportData()\n  }, [])\n\n  return (\n    <>\n      <ThemeProvider theme={darkTheme}>\n        <Sidebar\n          activeTab={activeTab}\n          onTestSelect={(index, test) => {\n            setActiveTab(index)\n            setTest(test)\n          }}\n        />\n      </ThemeProvider>\n\n      <ThemeProvider theme={brightTheme}>\n        {test && (\n          <>\n            <IconButton\n              id=\"closeButton\"\n              style={{ position: 'fixed', right: 30, top: 40, backgroundColor: transparentWhite, zIndex: 100 }}\n              onClick={() => {\n                setActiveTab(null)\n                setTest(null)\n              }}\n            >\n              <Close />\n            </IconButton>\n            <div id=\"scrollContainer\" style={{ flexGrow: 1, overflow: 'scroll', padding: 40 }}>\n              <>\n                <TestInfo test={test} failStepRef={failStepRef} />\n                <StepsInfo test={test} failStepRef={failStepRef} />\n              </>\n            </div>\n          </>\n        )}\n      </ThemeProvider>\n    </>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { BatchReport } from './pages'\n\nfunction App() {\n  return <BatchReport />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}